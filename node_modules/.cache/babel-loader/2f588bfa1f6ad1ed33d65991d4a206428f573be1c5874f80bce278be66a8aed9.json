{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useTranslate } from 'ra-core';\n/**\n * This component offers a wrapper to render children inside a FilterList\n * section.\n *\n * It basically adds a header with an icon and a label, before rendering the\n * children.\n *\n * It is used by `<FilterList>`, but can also be used standalone to make your\n * own components look nicer alongside a filter list.\n *\n * @example\n * import MailIcon from '@mui/icons-material/MailOutline';\n * import TitleIcon from '@mui/icons-material/Title';\n * import { Card, CardContent } from '@mui/material';\n * import * as React from 'react';\n * import {\n *     FilterLiveForm,\n *     FilterList,\n *     FilterListItem,\n *     FilterListSection,\n *     TextInput,\n * } from 'react-admin';\n *\n * export const BookListAside = () => (\n *     <Card sx={{ order: -1, mr: 2, mt: 6, width: 250, height: 'fit-content' }}>\n *         <CardContent>\n *             <FilterList label=\"Subscribed to newsletter\" icon={<MailIcon />}>\n *                 <FilterListItem label=\"Yes\" value={{ has_newsletter: true }} />\n *                 <FilterListItem label=\"No\" value={{ has_newsletter: false }} />\n *             </FilterList>\n *             <FilterListSection label=\"Title\" icon={<TitleIcon />}>\n *                 <FilterLiveForm>\n *                     <TextInput source=\"title\" resettable helperText={false} />\n *                 </FilterLiveForm>\n *             </FilterListSection>\n *         </CardContent>\n *     </Card>\n * );\n */\nexport var FilterListSection = function (props) {\n  var label = props.label,\n    icon = props.icon,\n    children = props.children,\n    rest = __rest(props, [\"label\", \"icon\", \"children\"]);\n  var translate = useTranslate();\n  return React.createElement(Box, __assign({}, rest), React.createElement(Box, {\n    mt: 2,\n    display: \"flex\",\n    alignItems: \"center\"\n  }, React.createElement(Box, {\n    mr: 1,\n    lineHeight: \"initial\"\n  }, icon), React.createElement(Typography, {\n    variant: \"overline\"\n  }, translate(label, {\n    _: label\n  }))), children);\n};","map":{"version":3,"names":["React","Box","Typography","useTranslate","FilterListSection","props","label","icon","children","rest","__rest","translate","createElement","__assign","mt","display","alignItems","mr","lineHeight","variant","_"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/list/filter/FilterListSection.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { Box, BoxProps, Typography } from '@mui/material';\nimport { useTranslate } from 'ra-core';\n\n/**\n * This component offers a wrapper to render children inside a FilterList\n * section.\n *\n * It basically adds a header with an icon and a label, before rendering the\n * children.\n *\n * It is used by `<FilterList>`, but can also be used standalone to make your\n * own components look nicer alongside a filter list.\n *\n * @example\n * import MailIcon from '@mui/icons-material/MailOutline';\n * import TitleIcon from '@mui/icons-material/Title';\n * import { Card, CardContent } from '@mui/material';\n * import * as React from 'react';\n * import {\n *     FilterLiveForm,\n *     FilterList,\n *     FilterListItem,\n *     FilterListSection,\n *     TextInput,\n * } from 'react-admin';\n *\n * export const BookListAside = () => (\n *     <Card sx={{ order: -1, mr: 2, mt: 6, width: 250, height: 'fit-content' }}>\n *         <CardContent>\n *             <FilterList label=\"Subscribed to newsletter\" icon={<MailIcon />}>\n *                 <FilterListItem label=\"Yes\" value={{ has_newsletter: true }} />\n *                 <FilterListItem label=\"No\" value={{ has_newsletter: false }} />\n *             </FilterList>\n *             <FilterListSection label=\"Title\" icon={<TitleIcon />}>\n *                 <FilterLiveForm>\n *                     <TextInput source=\"title\" resettable helperText={false} />\n *                 </FilterLiveForm>\n *             </FilterListSection>\n *         </CardContent>\n *     </Card>\n * );\n */\nexport const FilterListSection = (props: FilterListSectionProps) => {\n    const { label, icon, children, ...rest } = props;\n    const translate = useTranslate();\n    return (\n        <Box {...rest}>\n            <Box mt={2} display=\"flex\" alignItems=\"center\">\n                <Box mr={1} lineHeight=\"initial\">\n                    {icon}\n                </Box>\n                <Typography variant=\"overline\">\n                    {translate(label, { _: label })}\n                </Typography>\n            </Box>\n            {children}\n        </Box>\n    );\n};\n\nexport interface FilterListSectionProps extends BoxProps {\n    label: string;\n    icon: ReactNode;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,GAAG,EAAYC,UAAU,QAAQ,eAAe;AACzD,SAASC,YAAY,QAAQ,SAAS;AAEtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAO,IAAMC,iBAAiB,GAAG,SAAAA,CAACC,KAA6B;EACnD,IAAAC,KAAK,GAA8BD,KAAK,CAAAC,KAAnC;IAAEC,IAAI,GAAwBF,KAAK,CAAAE,IAA7B;IAAEC,QAAQ,GAAcH,KAAK,CAAAG,QAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKL,KAAK,EAA1C,6BAAkC,CAAF;EACtC,IAAMM,SAAS,GAAGR,YAAY,EAAE;EAChC,OACIH,KAAA,CAAAY,aAAA,CAACX,GAAG,EAAAY,QAAA,KAAKJ,IAAI,GACTT,KAAA,CAAAY,aAAA,CAACX,GAAG;IAACa,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAC,MAAM;IAACC,UAAU,EAAC;EAAQ,GAC1ChB,KAAA,CAAAY,aAAA,CAACX,GAAG;IAACgB,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAC;EAAS,GAC3BX,IAAI,CACH,EACNP,KAAA,CAAAY,aAAA,CAACV,UAAU;IAACiB,OAAO,EAAC;EAAU,GACzBR,SAAS,CAACL,KAAK,EAAE;IAAEc,CAAC,EAAEd;EAAK,CAAE,CAAC,CACtB,CACX,EACLE,QAAQ,CACP;AAEd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}