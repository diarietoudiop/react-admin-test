{"ast":null,"code":"import * as React from 'react';\nimport { useCallback, useRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useEvent } from './useEvent';\n// allow the hook to work in SSR\nvar useLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Hook somewhat equivalent to useEvent, but with a debounce\n * Returns a debounced callback which will not change across re-renders unless the\n * callback or delay changes\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n * @see https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport var useDebouncedEvent = function (callback, delay) {\n  // Create a ref that stores the debounced callback\n  var debouncedCallbackRef = useRef(function () {\n    throw new Error('Cannot call an event handler while rendering.');\n  });\n  // Keep a stable ref to the callback (in case it's an inline function for instance)\n  var stableCallback = useEvent(callback);\n  // Whenever callback or delay changes, we need to update the debounced callback\n  useLayoutEffect(function () {\n    debouncedCallbackRef.current = debounce(stableCallback, delay);\n  }, [stableCallback, delay]);\n  // The function returned by useCallback will invoke the debounced callback\n  // Its dependencies array is empty, so it never changes across re-renders\n  return useCallback(function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return debouncedCallbackRef.current.apply(debouncedCallbackRef, args);\n  }, []);\n};","map":{"version":3,"names":["React","useCallback","useRef","debounce","useEvent","useLayoutEffect","window","useEffect","useDebouncedEvent","callback","delay","debouncedCallbackRef","Error","stableCallback","current","args","_i","arguments","length","apply"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-core/src/util/useDebouncedEvent.ts"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, useRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useEvent } from './useEvent';\n\n// allow the hook to work in SSR\nconst useLayoutEffect =\n    typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/**\n * Hook somewhat equivalent to useEvent, but with a debounce\n * Returns a debounced callback which will not change across re-renders unless the\n * callback or delay changes\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n * @see https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport const useDebouncedEvent = <Args extends unknown[], Return>(\n    callback: (...args: Args) => Return,\n    delay: number\n) => {\n    // Create a ref that stores the debounced callback\n    const debouncedCallbackRef = useRef<(...args: Args) => Return | undefined>(\n        () => {\n            throw new Error('Cannot call an event handler while rendering.');\n        }\n    );\n\n    // Keep a stable ref to the callback (in case it's an inline function for instance)\n    const stableCallback = useEvent(callback);\n\n    // Whenever callback or delay changes, we need to update the debounced callback\n    useLayoutEffect(() => {\n        debouncedCallbackRef.current = debounce(stableCallback, delay);\n    }, [stableCallback, delay]);\n\n    // The function returned by useCallback will invoke the debounced callback\n    // Its dependencies array is empty, so it never changes across re-renders\n    return useCallback(\n        (...args: Args) => debouncedCallbackRef.current(...args),\n        []\n    );\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,QAAQ,QAAQ,YAAY;AAErC;AACA,IAAMC,eAAe,GACjB,OAAOC,MAAM,KAAK,WAAW,GAAGN,KAAK,CAACK,eAAe,GAAGL,KAAK,CAACO,SAAS;AAE3E;;;;;;;AAOA,OAAO,IAAMC,iBAAiB,GAAG,SAAAA,CAC7BC,QAAmC,EACnCC,KAAa;EAEb;EACA,IAAMC,oBAAoB,GAAGT,MAAM,CAC/B;IACI,MAAM,IAAIU,KAAK,CAAC,+CAA+C,CAAC;EACpE,CAAC,CACJ;EAED;EACA,IAAMC,cAAc,GAAGT,QAAQ,CAACK,QAAQ,CAAC;EAEzC;EACAJ,eAAe,CAAC;IACZM,oBAAoB,CAACG,OAAO,GAAGX,QAAQ,CAACU,cAAc,EAAEH,KAAK,CAAC;EAClE,CAAC,EAAE,CAACG,cAAc,EAAEH,KAAK,CAAC,CAAC;EAE3B;EACA;EACA,OAAOT,WAAW,CACd;IAAC,IAAAc,IAAA;SAAA,IAAAC,EAAA,IAAa,EAAbA,EAAA,GAAAC,SAAA,CAAAC,MAAa,EAAbF,EAAA,EAAa;MAAbD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IAAkB,OAAAL,oBAAoB,CAACG,OAAO,CAAAK,KAAA,CAA5BR,oBAAoB,EAAYI,IAAI;EAApC,CAAqC,EACxD,EAAE,CACL;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}