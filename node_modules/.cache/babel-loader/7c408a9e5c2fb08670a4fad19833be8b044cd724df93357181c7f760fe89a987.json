{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { Fragment } from 'react';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport { useDeleteWithConfirmController, useRecordContext, useResourceContext, useTranslate } from 'ra-core';\nimport { Confirm } from '../layout';\nimport { Button } from './Button';\nimport { humanize, singularize } from 'inflection';\nexport var DeleteWithConfirmButton = function (props) {\n  var className = props.className,\n    _a = props.confirmTitle,\n    confirmTitle = _a === void 0 ? 'ra.message.delete_title' : _a,\n    _b = props.confirmContent,\n    confirmContent = _b === void 0 ? 'ra.message.delete_content' : _b,\n    _c = props.confirmColor,\n    confirmColor = _c === void 0 ? 'primary' : _c,\n    _d = props.icon,\n    icon = _d === void 0 ? defaultIcon : _d,\n    _e = props.label,\n    label = _e === void 0 ? 'ra.action.delete' : _e,\n    _f = props.mutationMode,\n    mutationMode = _f === void 0 ? 'pessimistic' : _f,\n    onClick = props.onClick,\n    _g = props.redirect,\n    redirect = _g === void 0 ? 'list' : _g,\n    _h = props.translateOptions,\n    translateOptions = _h === void 0 ? {} : _h,\n    mutationOptions = props.mutationOptions,\n    _j = props.color,\n    color = _j === void 0 ? 'error' : _j,\n    successMessage = props.successMessage,\n    rest = __rest(props, [\"className\", \"confirmTitle\", \"confirmContent\", \"confirmColor\", \"icon\", \"label\", \"mutationMode\", \"onClick\", \"redirect\", \"translateOptions\", \"mutationOptions\", \"color\", \"successMessage\"]);\n  var translate = useTranslate();\n  var record = useRecordContext(props);\n  var resource = useResourceContext(props);\n  var _k = useDeleteWithConfirmController({\n      record: record,\n      redirect: redirect,\n      mutationMode: mutationMode,\n      onClick: onClick,\n      mutationOptions: mutationOptions,\n      resource: resource,\n      successMessage: successMessage\n    }),\n    open = _k.open,\n    isPending = _k.isPending,\n    handleDialogOpen = _k.handleDialogOpen,\n    handleDialogClose = _k.handleDialogClose,\n    handleDelete = _k.handleDelete;\n  return React.createElement(Fragment, null, React.createElement(Button, __assign({\n    onClick: handleDialogOpen,\n    label: label,\n    className: clsx('ra-delete-button', className),\n    key: \"button\",\n    color: color\n  }, rest), icon), React.createElement(Confirm, {\n    isOpen: open,\n    loading: isPending,\n    title: confirmTitle,\n    content: confirmContent,\n    confirmColor: confirmColor,\n    translateOptions: __assign({\n      name: translate(\"resources.\".concat(resource, \".forcedCaseName\"), {\n        smart_count: 1,\n        _: humanize(translate(\"resources.\".concat(resource, \".name\"), {\n          smart_count: 1,\n          _: resource ? singularize(resource) : undefined\n        }), true)\n      }),\n      id: record === null || record === void 0 ? void 0 : record.id\n    }, translateOptions),\n    onConfirm: handleDelete,\n    onClose: handleDialogClose\n  }));\n};\nvar defaultIcon = React.createElement(ActionDelete, null);","map":{"version":3,"names":["React","Fragment","ActionDelete","clsx","useDeleteWithConfirmController","useRecordContext","useResourceContext","useTranslate","Confirm","Button","humanize","singularize","DeleteWithConfirmButton","props","className","_a","confirmTitle","_b","confirmContent","_c","confirmColor","_d","icon","defaultIcon","_e","label","_f","mutationMode","onClick","_g","redirect","_h","translateOptions","mutationOptions","_j","color","successMessage","rest","__rest","translate","record","resource","_k","open","isPending","handleDialogOpen","handleDialogClose","handleDelete","createElement","__assign","key","isOpen","loading","title","content","name","concat","smart_count","_","undefined","id","onConfirm","onClose"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/button/DeleteWithConfirmButton.tsx"],"sourcesContent":["import React, { Fragment, ReactEventHandler, ReactElement } from 'react';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\n\nimport { UseMutationOptions } from '@tanstack/react-query';\nimport {\n    MutationMode,\n    RaRecord,\n    DeleteParams,\n    useDeleteWithConfirmController,\n    useRecordContext,\n    useResourceContext,\n    useTranslate,\n    RedirectionSideEffect,\n} from 'ra-core';\n\nimport { Confirm } from '../layout';\nimport { Button, ButtonProps } from './Button';\nimport { humanize, singularize } from 'inflection';\n\nexport const DeleteWithConfirmButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithConfirmButtonProps<RecordType>\n) => {\n    const {\n        className,\n        confirmTitle = 'ra.message.delete_title',\n        confirmContent = 'ra.message.delete_content',\n        confirmColor = 'primary',\n        icon = defaultIcon,\n        label = 'ra.action.delete',\n        mutationMode = 'pessimistic',\n        onClick,\n        redirect = 'list',\n        translateOptions = {},\n        mutationOptions,\n        color = 'error',\n        successMessage,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n\n    const {\n        open,\n        isPending,\n        handleDialogOpen,\n        handleDialogClose,\n        handleDelete,\n    } = useDeleteWithConfirmController({\n        record,\n        redirect,\n        mutationMode,\n        onClick,\n        mutationOptions,\n        resource,\n        successMessage,\n    });\n\n    return (\n        <Fragment>\n            <Button\n                onClick={handleDialogOpen}\n                label={label}\n                className={clsx('ra-delete-button', className)}\n                key=\"button\"\n                color={color}\n                {...rest}\n            >\n                {icon}\n            </Button>\n            <Confirm\n                isOpen={open}\n                loading={isPending}\n                title={confirmTitle}\n                content={confirmContent}\n                confirmColor={confirmColor}\n                translateOptions={{\n                    name: translate(`resources.${resource}.forcedCaseName`, {\n                        smart_count: 1,\n                        _: humanize(\n                            translate(`resources.${resource}.name`, {\n                                smart_count: 1,\n                                _: resource ? singularize(resource) : undefined,\n                            }),\n                            true\n                        ),\n                    }),\n                    id: record?.id,\n                    ...translateOptions,\n                }}\n                onConfirm={handleDelete}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithConfirmButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown,\n> extends ButtonProps {\n    confirmTitle?: React.ReactNode;\n    confirmContent?: React.ReactNode;\n    confirmColor?: 'primary' | 'warning';\n    icon?: ReactElement;\n    mutationMode?: MutationMode;\n    onClick?: ReactEventHandler<any>;\n    // May be injected by Toolbar - sanitized in Button\n    translateOptions?: object;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    successMessage?: string;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAyC,OAAO;AACxE,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,IAAI,MAAM,MAAM;AAGvB,SAIIC,8BAA8B,EAC9BC,gBAAgB,EAChBC,kBAAkB,EAClBC,YAAY,QAET,SAAS;AAEhB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,MAAM,QAAqB,UAAU;AAC9C,SAASC,QAAQ,EAAEC,WAAW,QAAQ,YAAY;AAElD,OAAO,IAAMC,uBAAuB,GAAG,SAAAA,CACnCC,KAA+C;EAG3C,IAAAC,SAAS,GAcTD,KAAK,CAAAC,SAdI;IACTC,EAAA,GAaAF,KAAK,CAAAG,YAbmC;IAAxCA,YAAY,GAAAD,EAAA,cAAG,yBAAyB,GAAAA,EAAA;IACxCE,EAAA,GAYAJ,KAAK,CAAAK,cAZuC;IAA5CA,cAAc,GAAAD,EAAA,cAAG,2BAA2B,GAAAA,EAAA;IAC5CE,EAAA,GAWAN,KAAK,CAAAO,YAXmB;IAAxBA,YAAY,GAAAD,EAAA,cAAG,SAAS,GAAAA,EAAA;IACxBE,EAAA,GAUAR,KAAK,CAAAS,IAVa;IAAlBA,IAAI,GAAAD,EAAA,cAAGE,WAAW,GAAAF,EAAA;IAClBG,EAAA,GASAX,KAAK,CAAAY,KATqB;IAA1BA,KAAK,GAAAD,EAAA,cAAG,kBAAkB,GAAAA,EAAA;IAC1BE,EAAA,GAQAb,KAAK,CAAAc,YARuB;IAA5BA,YAAY,GAAAD,EAAA,cAAG,aAAa,GAAAA,EAAA;IAC5BE,OAAO,GAOPf,KAAK,CAAAe,OAPE;IACPC,EAAA,GAMAhB,KAAK,CAAAiB,QANY;IAAjBA,QAAQ,GAAAD,EAAA,cAAG,MAAM,GAAAA,EAAA;IACjBE,EAAA,GAKAlB,KAAK,CAAAmB,gBALgB;IAArBA,gBAAgB,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;IACrBE,eAAe,GAIfpB,KAAK,CAAAoB,eAJU;IACfC,EAAA,GAGArB,KAAK,CAAAsB,KAHU;IAAfA,KAAK,GAAAD,EAAA,cAAG,OAAO,GAAAA,EAAA;IACfE,cAAc,GAEdvB,KAAK,CAAAuB,cAFS;IACXC,IAAI,GAAAC,MAAA,CACPzB,KAAK,EAfH,yLAeL,CADU;EAEX,IAAM0B,SAAS,GAAGhC,YAAY,EAAE;EAChC,IAAMiC,MAAM,GAAGnC,gBAAgB,CAACQ,KAAK,CAAC;EACtC,IAAM4B,QAAQ,GAAGnC,kBAAkB,CAACO,KAAK,CAAC;EAEpC,IAAA6B,EAAA,GAMFtC,8BAA8B,CAAC;MAC/BoC,MAAM,EAAAA,MAAA;MACNV,QAAQ,EAAAA,QAAA;MACRH,YAAY,EAAAA,YAAA;MACZC,OAAO,EAAAA,OAAA;MACPK,eAAe,EAAAA,eAAA;MACfQ,QAAQ,EAAAA,QAAA;MACRL,cAAc,EAAAA;KACjB,CAAC;IAbEO,IAAI,GAAAD,EAAA,CAAAC,IAAA;IACJC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IACTC,gBAAgB,GAAAH,EAAA,CAAAG,gBAAA;IAChBC,iBAAiB,GAAAJ,EAAA,CAAAI,iBAAA;IACjBC,YAAY,GAAAL,EAAA,CAAAK,YASd;EAEF,OACI/C,KAAA,CAAAgD,aAAA,CAAC/C,QAAQ,QACLD,KAAA,CAAAgD,aAAA,CAACvC,MAAM,EAAAwC,QAAA;IACHrB,OAAO,EAAEiB,gBAAgB;IACzBpB,KAAK,EAAEA,KAAK;IACZX,SAAS,EAAEX,IAAI,CAAC,kBAAkB,EAAEW,SAAS,CAAC;IAC9CoC,GAAG,EAAC,QAAQ;IACZf,KAAK,EAAEA;EAAK,GACRE,IAAI,GAEPf,IAAI,CACA,EACTtB,KAAA,CAAAgD,aAAA,CAACxC,OAAO;IACJ2C,MAAM,EAAER,IAAI;IACZS,OAAO,EAAER,SAAS;IAClBS,KAAK,EAAErC,YAAY;IACnBsC,OAAO,EAAEpC,cAAc;IACvBE,YAAY,EAAEA,YAAY;IAC1BY,gBAAgB,EAAAiB,QAAA;MACZM,IAAI,EAAEhB,SAAS,CAAC,aAAAiB,MAAA,CAAaf,QAAQ,oBAAiB,EAAE;QACpDgB,WAAW,EAAE,CAAC;QACdC,CAAC,EAAEhD,QAAQ,CACP6B,SAAS,CAAC,aAAAiB,MAAA,CAAaf,QAAQ,UAAO,EAAE;UACpCgB,WAAW,EAAE,CAAC;UACdC,CAAC,EAAEjB,QAAQ,GAAG9B,WAAW,CAAC8B,QAAQ,CAAC,GAAGkB;SACzC,CAAC,EACF,IAAI;OAEX,CAAC;MACFC,EAAE,EAAEpB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEoB;IAAE,GACX5B,gBAAgB;IAEvB6B,SAAS,EAAEd,YAAY;IACvBe,OAAO,EAAEhB;EAAiB,EAC5B,CACK;AAEnB,CAAC;AAED,IAAMvB,WAAW,GAAGvB,KAAA,CAAAgD,aAAA,CAAC9C,YAAY,OAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}