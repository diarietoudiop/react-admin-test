{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport ContentCreate from '@mui/icons-material/Create';\nimport { Link } from 'react-router-dom';\nimport { useResourceContext, useRecordContext, useCreatePath, useCanAccess } from 'ra-core';\nimport { Button } from './Button';\n/**\n * Opens the Edit view for the current record.\n *\n * Reads the record and resource from the context.\n *\n * @example // basic usage\n * import { EditButton } from 'react-admin';\n *\n * const CommentEditButton = () => (\n *     <EditButton label=\"Edit comment\" />\n * );\n */\nexport var EditButton = function (props) {\n  var _a = props.icon,\n    icon = _a === void 0 ? defaultIcon : _a,\n    _b = props.label,\n    label = _b === void 0 ? 'ra.action.edit' : _b,\n    _c = props.scrollToTop,\n    scrollToTop = _c === void 0 ? true : _c,\n    className = props.className,\n    rest = __rest(props, [\"icon\", \"label\", \"scrollToTop\", \"className\"]);\n  var resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('<EditButton> components should be used inside a <Resource> component or provided with a resource prop. (The <Resource> component set the resource prop for all its children).');\n  }\n  var record = useRecordContext(props);\n  var createPath = useCreatePath();\n  var _d = useCanAccess({\n      action: 'edit',\n      resource: resource,\n      record: record\n    }),\n    canAccess = _d.canAccess,\n    isPending = _d.isPending;\n  if (!record || !canAccess || isPending) return null;\n  return React.createElement(StyledButton, __assign({\n    component: Link,\n    to: createPath({\n      type: 'edit',\n      resource: resource,\n      id: record.id\n    }),\n    state: scrollStates[String(scrollToTop)],\n    label: label,\n    onClick: stopPropagation,\n    className: clsx(EditButtonClasses.root, className)\n  }, rest), icon);\n};\n// avoids using useMemo to get a constant value for the link state\nvar scrollStates = {\n  true: {\n    _scrollToTop: true\n  },\n  false: {}\n};\nvar defaultIcon = React.createElement(ContentCreate, null);\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};\nvar PREFIX = 'RaEditButton';\nexport var EditButtonClasses = {\n  root: \"\".concat(PREFIX, \"-root\")\n};\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (_props, styles) {\n    return styles.root;\n  }\n})({});","map":{"version":3,"names":["React","clsx","styled","ContentCreate","Link","useResourceContext","useRecordContext","useCreatePath","useCanAccess","Button","EditButton","props","_a","icon","defaultIcon","_b","label","_c","scrollToTop","className","rest","__rest","resource","Error","record","createPath","_d","action","canAccess","isPending","createElement","StyledButton","__assign","component","to","type","id","state","scrollStates","String","onClick","stopPropagation","EditButtonClasses","root","true","_scrollToTop","false","e","PREFIX","concat","name","overridesResolver","_props","styles"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/button/EditButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement } from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport ContentCreate from '@mui/icons-material/Create';\nimport { Link } from 'react-router-dom';\nimport {\n    RaRecord,\n    useResourceContext,\n    useRecordContext,\n    useCreatePath,\n    useCanAccess,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the Edit view for the current record.\n *\n * Reads the record and resource from the context.\n *\n * @example // basic usage\n * import { EditButton } from 'react-admin';\n *\n * const CommentEditButton = () => (\n *     <EditButton label=\"Edit comment\" />\n * );\n */\nexport const EditButton = <RecordType extends RaRecord = any>(\n    props: EditButtonProps<RecordType>\n) => {\n    const {\n        icon = defaultIcon,\n        label = 'ra.action.edit',\n        scrollToTop = true,\n        className,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    if (!resource) {\n        throw new Error(\n            '<EditButton> components should be used inside a <Resource> component or provided with a resource prop. (The <Resource> component set the resource prop for all its children).'\n        );\n    }\n    const record = useRecordContext(props);\n    const createPath = useCreatePath();\n    const { canAccess, isPending } = useCanAccess({\n        action: 'edit',\n        resource,\n        record,\n    });\n    if (!record || !canAccess || isPending) return null;\n    return (\n        <StyledButton\n            component={Link}\n            to={createPath({ type: 'edit', resource, id: record.id })}\n            state={scrollStates[String(scrollToTop)]}\n            label={label}\n            onClick={stopPropagation}\n            className={clsx(EditButtonClasses.root, className)}\n            {...(rest as any)}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ContentCreate />;\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\ninterface Props<RecordType extends RaRecord = any> {\n    icon?: ReactElement;\n    label?: string;\n    record?: RecordType;\n    resource?: string;\n    scrollToTop?: boolean;\n}\n\nexport type EditButtonProps<RecordType extends RaRecord = any> =\n    Props<RecordType> & ButtonProps;\n\nconst PREFIX = 'RaEditButton';\n\nexport const EditButtonClasses = {\n    root: `${PREFIX}-root`,\n};\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (_props, styles) => styles.root,\n})({});\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAEIC,kBAAkB,EAClBC,gBAAgB,EAChBC,aAAa,EACbC,YAAY,QACT,SAAS;AAEhB,SAASC,MAAM,QAAqB,UAAU;AAE9C;;;;;;;;;;;;AAYA,OAAO,IAAMC,UAAU,GAAG,SAAAA,CACtBC,KAAkC;EAG9B,IAAAC,EAAA,GAKAD,KAAK,CAAAE,IALa;IAAlBA,IAAI,GAAAD,EAAA,cAAGE,WAAW,GAAAF,EAAA;IAClBG,EAAA,GAIAJ,KAAK,CAAAK,KAJmB;IAAxBA,KAAK,GAAAD,EAAA,cAAG,gBAAgB,GAAAA,EAAA;IACxBE,EAAA,GAGAN,KAAK,CAAAO,WAHa;IAAlBA,WAAW,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IAClBE,SAAS,GAETR,KAAK,CAAAQ,SAFI;IACNC,IAAI,GAAAC,MAAA,CACPV,KAAK,EANH,6CAML,CADU;EAEX,IAAMW,QAAQ,GAAGjB,kBAAkB,CAACM,KAAK,CAAC;EAC1C,IAAI,CAACW,QAAQ,EAAE;IACX,MAAM,IAAIC,KAAK,CACX,+KAA+K,CAClL;;EAEL,IAAMC,MAAM,GAAGlB,gBAAgB,CAACK,KAAK,CAAC;EACtC,IAAMc,UAAU,GAAGlB,aAAa,EAAE;EAC5B,IAAAmB,EAAA,GAA2BlB,YAAY,CAAC;MAC1CmB,MAAM,EAAE,MAAM;MACdL,QAAQ,EAAAA,QAAA;MACRE,MAAM,EAAAA;KACT,CAAC;IAJMI,SAAS,GAAAF,EAAA,CAAAE,SAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAI1B;EACF,IAAI,CAACL,MAAM,IAAI,CAACI,SAAS,IAAIC,SAAS,EAAE,OAAO,IAAI;EACnD,OACI7B,KAAA,CAAA8B,aAAA,CAACC,YAAY,EAAAC,QAAA;IACTC,SAAS,EAAE7B,IAAI;IACf8B,EAAE,EAAET,UAAU,CAAC;MAAEU,IAAI,EAAE,MAAM;MAAEb,QAAQ,EAAAA,QAAA;MAAEc,EAAE,EAAEZ,MAAM,CAACY;IAAE,CAAE,CAAC;IACzDC,KAAK,EAAEC,YAAY,CAACC,MAAM,CAACrB,WAAW,CAAC,CAAC;IACxCF,KAAK,EAAEA,KAAK;IACZwB,OAAO,EAAEC,eAAe;IACxBtB,SAAS,EAAElB,IAAI,CAACyC,iBAAiB,CAACC,IAAI,EAAExB,SAAS;EAAC,GAC7CC,IAAY,GAEhBP,IAAI,CACM;AAEvB,CAAC;AAED;AACA,IAAMyB,YAAY,GAAG;EACjBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAI,CAAE;EAC5BC,KAAK,EAAE;CACV;AAED,IAAMhC,WAAW,GAAGd,KAAA,CAAA8B,aAAA,CAAC3B,aAAa,OAAG;AAErC;AACA,IAAMsC,eAAe,GAAG,SAAAA,CAAAM,CAAC;EAAI,OAAAA,CAAC,CAACN,eAAe,EAAE;AAAnB,CAAmB;AAahD,IAAMO,MAAM,GAAG,cAAc;AAE7B,OAAO,IAAMN,iBAAiB,GAAG;EAC7BC,IAAI,EAAE,GAAAM,MAAA,CAAGD,MAAM;CAClB;AAED,IAAMjB,YAAY,GAAG7B,MAAM,CAACO,MAAM,EAAE;EAChCyC,IAAI,EAAEF,MAAM;EACZG,iBAAiB,EAAE,SAAAA,CAACC,MAAM,EAAEC,MAAM;IAAK,OAAAA,MAAM,CAACV,IAAI;EAAX;CAC1C,CAAC,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}