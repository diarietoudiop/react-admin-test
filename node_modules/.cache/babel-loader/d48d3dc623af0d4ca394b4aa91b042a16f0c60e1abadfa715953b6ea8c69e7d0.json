{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment } from '@mui/material';\nimport { FilterLiveForm, useTranslate } from 'ra-core';\nimport { TextInput } from '../../input';\n/**\n * Form and search input for doing a full-text search filter.\n *\n * Triggers a search on change (with debounce).\n *\n * @example\n *\n * const FilterPanel = () => (\n *     <Card>\n *         <CardContent>\n *             <FilterLiveSearch source=\"title\" />\n *         </CardContent>\n *     </Card>\n * );\n */\nexport var FilterLiveSearch = memo(function (props) {\n  var translate = useTranslate();\n  var _a = props.source,\n    source = _a === void 0 ? 'q' : _a,\n    _b = props.label,\n    label = _b === void 0 ? translate('ra.action.search') : _b,\n    placeholder = props.placeholder,\n    rest = __rest(props, [\"source\", \"label\", \"placeholder\"]);\n  return React.createElement(FilterLiveForm, null, React.createElement(TextInput, __assign({\n    resettable: true,\n    helperText: false,\n    source: source,\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\"\n      }, React.createElement(SearchIcon, {\n        color: \"disabled\"\n      }))\n    },\n    size: \"small\",\n    label: rest.hiddenLabel ? false : label,\n    placeholder: placeholder !== null && placeholder !== void 0 ? placeholder : rest.hiddenLabel ? label : undefined\n  }, rest)));\n});","map":{"version":3,"names":["React","memo","SearchIcon","InputAdornment","FilterLiveForm","useTranslate","TextInput","FilterLiveSearch","props","translate","_a","source","_b","label","placeholder","rest","__rest","createElement","__assign","resettable","helperText","InputProps","endAdornment","position","color","size","hiddenLabel","undefined"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/list/filter/FilterLiveSearch.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment } from '@mui/material';\nimport { SxProps } from '@mui/system';\nimport { FilterLiveForm, useTranslate } from 'ra-core';\n\nimport { TextInput, TextInputProps } from '../../input';\n\n/**\n * Form and search input for doing a full-text search filter.\n *\n * Triggers a search on change (with debounce).\n *\n * @example\n *\n * const FilterPanel = () => (\n *     <Card>\n *         <CardContent>\n *             <FilterLiveSearch source=\"title\" />\n *         </CardContent>\n *     </Card>\n * );\n */\nexport const FilterLiveSearch = memo((props: FilterLiveSearchProps) => {\n    const translate = useTranslate();\n\n    const {\n        source = 'q',\n        label = translate('ra.action.search'),\n        placeholder,\n        ...rest\n    } = props;\n\n    return (\n        <FilterLiveForm>\n            <TextInput\n                resettable\n                helperText={false}\n                source={source}\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <SearchIcon color=\"disabled\" />\n                        </InputAdornment>\n                    ),\n                }}\n                size=\"small\"\n                label={rest.hiddenLabel ? false : label}\n                placeholder={\n                    placeholder ?? (rest.hiddenLabel ? label : undefined)\n                }\n                {...rest}\n            />\n        </FilterLiveForm>\n    );\n});\n\nexport interface FilterLiveSearchProps extends Omit<TextInputProps, 'source'> {\n    source?: string;\n    sx?: SxProps;\n    label?: string;\n    fullWidth?: boolean;\n    variant?: 'filled' | 'outlined';\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAQ,OAAO;AAC5B,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,cAAc,EAAEC,YAAY,QAAQ,SAAS;AAEtD,SAASC,SAAS,QAAwB,aAAa;AAEvD;;;;;;;;;;;;;;;AAeA,OAAO,IAAMC,gBAAgB,GAAGN,IAAI,CAAC,UAACO,KAA4B;EAC9D,IAAMC,SAAS,GAAGJ,YAAY,EAAE;EAG5B,IAAAK,EAAA,GAIAF,KAAK,CAAAG,MAJO;IAAZA,MAAM,GAAAD,EAAA,cAAG,GAAG,GAAAA,EAAA;IACZE,EAAA,GAGAJ,KAAK,CAAAK,KAHgC;IAArCA,KAAK,GAAAD,EAAA,cAAGH,SAAS,CAAC,kBAAkB,CAAC,GAAAG,EAAA;IACrCE,WAAW,GAEXN,KAAK,CAAAM,WAFM;IACRC,IAAI,GAAAC,MAAA,CACPR,KAAK,EALH,kCAKL,CADU;EAGX,OACIR,KAAA,CAAAiB,aAAA,CAACb,cAAc,QACXJ,KAAA,CAAAiB,aAAA,CAACX,SAAS,EAAAY,QAAA;IACNC,UAAU;IACVC,UAAU,EAAE,KAAK;IACjBT,MAAM,EAAEA,MAAM;IACdU,UAAU,EAAE;MACRC,YAAY,EACRtB,KAAA,CAAAiB,aAAA,CAACd,cAAc;QAACoB,QAAQ,EAAC;MAAK,GAC1BvB,KAAA,CAAAiB,aAAA,CAACf,UAAU;QAACsB,KAAK,EAAC;MAAU,EAAG;KAG1C;IACDC,IAAI,EAAC,OAAO;IACZZ,KAAK,EAAEE,IAAI,CAACW,WAAW,GAAG,KAAK,GAAGb,KAAK;IACvCC,WAAW,EACPA,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAKC,IAAI,CAACW,WAAW,GAAGb,KAAK,GAAGc;EAAU,GAErDZ,IAAI,EACV,CACW;AAEzB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}