{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { createMemoryRouter, RouterProvider, useLocation, useNavigate } from 'react-router-dom';\nvar UseLocation = function (_a) {\n  var locationCallback = _a.locationCallback;\n  var location = useLocation();\n  locationCallback(location);\n  return null;\n};\nvar UseNavigate = function (_a) {\n  var navigateCallback = _a.navigateCallback;\n  var navigate = useNavigate();\n  navigateCallback(navigate);\n  return null;\n};\n/**\n * Wrapper around react-router's `createMemoryRouter` to be used in test components.\n *\n * It is similar to `MemoryRouter` but it supports\n * [data APIs](https://reactrouter.com/en/main/routers/picking-a-router#data-apis).\n *\n * Additionally, it provides\n * - a `locationCallback` prop to get the location in the test\n * - a `navigateCallback` prop to be able to navigate in the test\n */\nexport var TestMemoryRouter = function (_a) {\n  var children = _a.children,\n    locationCallback = _a.locationCallback,\n    navigateCallback = _a.navigateCallback,\n    rest = __rest(_a, [\"children\", \"locationCallback\", \"navigateCallback\"]);\n  var router = createMemoryRouter([{\n    path: '*',\n    element: React.createElement(React.Fragment, null, children, locationCallback && React.createElement(UseLocation, {\n      locationCallback: locationCallback\n    }), navigateCallback && React.createElement(UseNavigate, {\n      navigateCallback: navigateCallback\n    }))\n  }], __assign({\n    future: {\n      v7_fetcherPersist: false,\n      v7_normalizeFormMethod: false,\n      v7_partialHydration: false,\n      v7_relativeSplatPath: false,\n      v7_skipActionErrorRevalidation: false\n    }\n  }, rest));\n  return React.createElement(RouterProvider, {\n    router: router,\n    // @ts-expect-error react-router types are not up-to-date\n    future: {\n      v7_startTransition: false,\n      v7_relativeSplatPath: false\n    }\n  });\n};","map":{"version":3,"names":["React","createMemoryRouter","RouterProvider","useLocation","useNavigate","UseLocation","_a","locationCallback","location","UseNavigate","navigateCallback","navigate","TestMemoryRouter","children","rest","__rest","router","path","element","createElement","Fragment","__assign","future","v7_fetcherPersist","v7_normalizeFormMethod","v7_partialHydration","v7_relativeSplatPath","v7_skipActionErrorRevalidation","v7_startTransition"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-core/src/routing/TestMemoryRouter.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    createMemoryRouter,\n    RouterProvider,\n    useLocation,\n    Location,\n    useNavigate,\n    NavigateFunction,\n} from 'react-router-dom';\nimport type { InitialEntry } from '@remix-run/router';\n\nconst UseLocation = ({\n    locationCallback,\n}: {\n    locationCallback: (l: Location) => void;\n}) => {\n    const location = useLocation();\n    locationCallback(location);\n    return null;\n};\n\nconst UseNavigate = ({\n    navigateCallback,\n}: {\n    navigateCallback: (n: NavigateFunction) => void;\n}) => {\n    const navigate = useNavigate();\n    navigateCallback(navigate);\n    return null;\n};\n\n/**\n * Wrapper around react-router's `createMemoryRouter` to be used in test components.\n *\n * It is similar to `MemoryRouter` but it supports\n * [data APIs](https://reactrouter.com/en/main/routers/picking-a-router#data-apis).\n *\n * Additionally, it provides\n * - a `locationCallback` prop to get the location in the test\n * - a `navigateCallback` prop to be able to navigate in the test\n */\nexport const TestMemoryRouter = ({\n    children,\n    locationCallback,\n    navigateCallback,\n    ...rest\n}: {\n    children: React.ReactNode;\n    locationCallback?: (l: Location) => void;\n    navigateCallback?: (n: NavigateFunction) => void;\n    basename?: string;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n}) => {\n    const router = createMemoryRouter(\n        [\n            {\n                path: '*',\n                element: (\n                    <>\n                        {children}\n                        {locationCallback && (\n                            <UseLocation locationCallback={locationCallback} />\n                        )}\n                        {navigateCallback && (\n                            <UseNavigate navigateCallback={navigateCallback} />\n                        )}\n                    </>\n                ),\n            },\n        ],\n        {\n            future: {\n                v7_fetcherPersist: false,\n                v7_normalizeFormMethod: false,\n                v7_partialHydration: false,\n                v7_relativeSplatPath: false,\n                v7_skipActionErrorRevalidation: false,\n            },\n            ...rest,\n        }\n    );\n    return (\n        <RouterProvider\n            router={router}\n            // @ts-expect-error react-router types are not up-to-date\n            future={{ v7_startTransition: false, v7_relativeSplatPath: false }}\n        />\n    );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACIC,kBAAkB,EAClBC,cAAc,EACdC,WAAW,EAEXC,WAAW,QAER,kBAAkB;AAGzB,IAAMC,WAAW,GAAG,SAAAA,CAACC,EAIpB;MAHGC,gBAAgB,GAAAD,EAAA,CAAAC,gBAAA;EAIhB,IAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9BI,gBAAgB,CAACC,QAAQ,CAAC;EAC1B,OAAO,IAAI;AACf,CAAC;AAED,IAAMC,WAAW,GAAG,SAAAA,CAACH,EAIpB;MAHGI,gBAAgB,GAAAJ,EAAA,CAAAI,gBAAA;EAIhB,IAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9BM,gBAAgB,CAACC,QAAQ,CAAC;EAC1B,OAAO,IAAI;AACf,CAAC;AAED;;;;;;;;;;AAUA,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAACN,EAYhC;EAXG,IAAAO,QAAQ,GAAAP,EAAA,CAAAO,QAAA;IACRN,gBAAgB,GAAAD,EAAA,CAAAC,gBAAA;IAChBG,gBAAgB,GAAAJ,EAAA,CAAAI,gBAAA;IACbI,IAAI,GAAAC,MAAA,CAAAT,EAAA,EAJsB,oDAKhC,CADU;EASP,IAAMU,MAAM,GAAGf,kBAAkB,CAC7B,CACI;IACIgB,IAAI,EAAE,GAAG;IACTC,OAAO,EACHlB,KAAA,CAAAmB,aAAA,CAAAnB,KAAA,CAAAoB,QAAA,QACKP,QAAQ,EACRN,gBAAgB,IACbP,KAAA,CAAAmB,aAAA,CAACd,WAAW;MAACE,gBAAgB,EAAEA;IAAgB,EAClD,EACAG,gBAAgB,IACbV,KAAA,CAAAmB,aAAA,CAACV,WAAW;MAACC,gBAAgB,EAAEA;IAAgB,EAClD;GAGZ,CACJ,EAAAW,QAAA;IAEGC,MAAM,EAAE;MACJC,iBAAiB,EAAE,KAAK;MACxBC,sBAAsB,EAAE,KAAK;MAC7BC,mBAAmB,EAAE,KAAK;MAC1BC,oBAAoB,EAAE,KAAK;MAC3BC,8BAA8B,EAAE;;EACnC,GACEb,IAAI,EAEd;EACD,OACId,KAAA,CAAAmB,aAAA,CAACjB,cAAc;IACXc,MAAM,EAAEA,MAAM;IACd;IACAM,MAAM,EAAE;MAAEM,kBAAkB,EAAE,KAAK;MAAEF,oBAAoB,EAAE;IAAK;EAAE,EACpE;AAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}