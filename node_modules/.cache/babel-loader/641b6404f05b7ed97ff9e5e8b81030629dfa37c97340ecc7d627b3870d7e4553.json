{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useMemo } from 'react';\nimport { Typography } from '@mui/material';\nimport { useReferenceOneFieldController, useRecordContext, ResourceContextProvider, useGetPathForRecord, useTranslate, RecordContextProvider, ReferenceFieldContextProvider } from 'ra-core';\nimport { ReferenceFieldView } from './ReferenceField';\n/**\n * Render the related record in a one-to-one relationship\n *\n * Expects a single field as child\n *\n * @example // display the bio of the current author\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\n *     <TextField source=\"body\" />\n * </ReferenceOneField>\n */\nexport var ReferenceOneField = function (props) {\n  var children = props.children,\n    reference = props.reference,\n    _a = props.source,\n    source = _a === void 0 ? 'id' : _a,\n    target = props.target,\n    emptyText = props.emptyText,\n    sort = props.sort,\n    filter = props.filter,\n    link = props.link,\n    queryOptions = props.queryOptions;\n  var record = useRecordContext(props);\n  var translate = useTranslate();\n  var controllerProps = useReferenceOneFieldController({\n    record: record,\n    reference: reference,\n    source: source,\n    target: target,\n    sort: sort,\n    filter: filter,\n    queryOptions: queryOptions\n  });\n  var path = useGetPathForRecord({\n    record: controllerProps.referenceRecord,\n    resource: reference,\n    link: link\n  });\n  var context = useMemo(function () {\n    return __assign(__assign({}, controllerProps), {\n      link: path\n    });\n  }, [controllerProps, path]);\n  return !record || !controllerProps.isPending && controllerProps.referenceRecord == null ? emptyText ? React.createElement(Typography, {\n    component: \"span\",\n    variant: \"body2\"\n  }, emptyText && translate(emptyText, {\n    _: emptyText\n  })) : null : React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(ReferenceFieldContextProvider, {\n    value: context\n  }, React.createElement(RecordContextProvider, {\n    value: context.referenceRecord\n  }, React.createElement(ReferenceFieldView, {\n    reference: reference,\n    source: source\n  }, children))));\n};\n// disable sorting on this field by default as its default source prop ('id')\n// will match the default sort ({ field: 'id', order: 'DESC'})\n// leading to an incorrect sort indicator in a datagrid header\nReferenceOneField.sortable = false;","map":{"version":3,"names":["React","useMemo","Typography","useReferenceOneFieldController","useRecordContext","ResourceContextProvider","useGetPathForRecord","useTranslate","RecordContextProvider","ReferenceFieldContextProvider","ReferenceFieldView","ReferenceOneField","props","children","reference","_a","source","target","emptyText","sort","filter","link","queryOptions","record","translate","controllerProps","path","referenceRecord","resource","context","__assign","isPending","createElement","component","variant","_","value","sortable"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/field/ReferenceOneField.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport { UseQueryOptions } from '@tanstack/react-query';\nimport { Typography } from '@mui/material';\nimport {\n    useReferenceOneFieldController,\n    useRecordContext,\n    ResourceContextProvider,\n    LinkToType,\n    useGetPathForRecord,\n    useTranslate,\n    SortPayload,\n    RaRecord,\n    RecordContextProvider,\n    ReferenceFieldContextProvider,\n    UseReferenceFieldControllerResult,\n} from 'ra-core';\n\nimport { FieldProps } from './types';\nimport { ReferenceFieldView } from './ReferenceField';\n\n/**\n * Render the related record in a one-to-one relationship\n *\n * Expects a single field as child\n *\n * @example // display the bio of the current author\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\n *     <TextField source=\"body\" />\n * </ReferenceOneField>\n */\nexport const ReferenceOneField = <\n    RecordType extends RaRecord = RaRecord,\n    ReferenceRecordType extends RaRecord = RaRecord,\n>(\n    props: ReferenceOneFieldProps<RecordType, ReferenceRecordType>\n) => {\n    const {\n        children,\n        reference,\n        source = 'id',\n        target,\n        emptyText,\n        sort,\n        filter,\n        link,\n        queryOptions,\n    } = props;\n    const record = useRecordContext<RecordType>(props);\n    const translate = useTranslate();\n\n    const controllerProps = useReferenceOneFieldController<ReferenceRecordType>(\n        {\n            record,\n            reference,\n            source,\n            target,\n            sort,\n            filter,\n            queryOptions,\n        }\n    );\n\n    const path = useGetPathForRecord({\n        record: controllerProps.referenceRecord,\n        resource: reference,\n        link,\n    });\n\n    const context = useMemo<UseReferenceFieldControllerResult>(\n        () => ({\n            ...controllerProps,\n            link: path,\n        }),\n        [controllerProps, path]\n    );\n    return !record ||\n        (!controllerProps.isPending &&\n            controllerProps.referenceRecord == null) ? (\n        emptyText ? (\n            <Typography component=\"span\" variant=\"body2\">\n                {emptyText && translate(emptyText, { _: emptyText })}\n            </Typography>\n        ) : null\n    ) : (\n        <ResourceContextProvider value={reference}>\n            <ReferenceFieldContextProvider value={context}>\n                <RecordContextProvider value={context.referenceRecord}>\n                    <ReferenceFieldView reference={reference} source={source}>\n                        {children}\n                    </ReferenceFieldView>\n                </RecordContextProvider>\n            </ReferenceFieldContextProvider>\n        </ResourceContextProvider>\n    );\n};\n\nexport interface ReferenceOneFieldProps<\n    RecordType extends RaRecord = RaRecord,\n    ReferenceRecordType extends RaRecord = RaRecord,\n> extends Omit<FieldProps<RecordType>, 'source'> {\n    children?: ReactNode;\n    reference: string;\n    target: string;\n    sort?: SortPayload;\n    source?: string;\n    filter?: any;\n    link?: LinkToType<ReferenceRecordType>;\n    queryOptions?: Omit<\n        UseQueryOptions<{\n            data: ReferenceRecordType[];\n            total: number;\n        }>,\n        'queryKey'\n    > & { meta?: any };\n}\n\n// disable sorting on this field by default as its default source prop ('id')\n// will match the default sort ({ field: 'id', order: 'DESC'})\n// leading to an incorrect sort indicator in a datagrid header\nReferenceOneField.sortable = false;\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,IAAeC,OAAO,QAAQ,OAAO;AAEjD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SACIC,8BAA8B,EAC9BC,gBAAgB,EAChBC,uBAAuB,EAEvBC,mBAAmB,EACnBC,YAAY,EAGZC,qBAAqB,EACrBC,6BAA6B,QAE1B,SAAS;AAGhB,SAASC,kBAAkB,QAAQ,kBAAkB;AAErD;;;;;;;;;;AAUA,OAAO,IAAMC,iBAAiB,GAAG,SAAAA,CAI7BC,KAA8D;EAG1D,IAAAC,QAAQ,GASRD,KAAK,CAAAC,QATG;IACRC,SAAS,GAQTF,KAAK,CAAAE,SARI;IACTC,EAAA,GAOAH,KAAK,CAAAI,MAPQ;IAAbA,MAAM,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IACbE,MAAM,GAMNL,KAAK,CAAAK,MANC;IACNC,SAAS,GAKTN,KAAK,CAAAM,SALI;IACTC,IAAI,GAIJP,KAAK,CAAAO,IAJD;IACJC,MAAM,GAGNR,KAAK,CAAAQ,MAHC;IACNC,IAAI,GAEJT,KAAK,CAAAS,IAFD;IACJC,YAAY,GACZV,KAAK,CAAAU,YADO;EAEhB,IAAMC,MAAM,GAAGnB,gBAAgB,CAAaQ,KAAK,CAAC;EAClD,IAAMY,SAAS,GAAGjB,YAAY,EAAE;EAEhC,IAAMkB,eAAe,GAAGtB,8BAA8B,CAClD;IACIoB,MAAM,EAAAA,MAAA;IACNT,SAAS,EAAAA,SAAA;IACTE,MAAM,EAAAA,MAAA;IACNC,MAAM,EAAAA,MAAA;IACNE,IAAI,EAAAA,IAAA;IACJC,MAAM,EAAAA,MAAA;IACNE,YAAY,EAAAA;GACf,CACJ;EAED,IAAMI,IAAI,GAAGpB,mBAAmB,CAAC;IAC7BiB,MAAM,EAAEE,eAAe,CAACE,eAAe;IACvCC,QAAQ,EAAEd,SAAS;IACnBO,IAAI,EAAAA;GACP,CAAC;EAEF,IAAMQ,OAAO,GAAG5B,OAAO,CACnB;IAAM,OAAA6B,QAAA,CAAAA,QAAA,KACCL,eAAe;MAClBJ,IAAI,EAAEK;IAAI;EAFR,CAGJ,EACF,CAACD,eAAe,EAAEC,IAAI,CAAC,CAC1B;EACD,OAAO,CAACH,MAAM,IACT,CAACE,eAAe,CAACM,SAAS,IACvBN,eAAe,CAACE,eAAe,IAAI,IAAK,GAC5CT,SAAS,GACLlB,KAAA,CAAAgC,aAAA,CAAC9B,UAAU;IAAC+B,SAAS,EAAC,MAAM;IAACC,OAAO,EAAC;EAAO,GACvChB,SAAS,IAAIM,SAAS,CAACN,SAAS,EAAE;IAAEiB,CAAC,EAAEjB;EAAS,CAAE,CAAC,CAC3C,GACb,IAAI,GAERlB,KAAA,CAAAgC,aAAA,CAAC3B,uBAAuB;IAAC+B,KAAK,EAAEtB;EAAS,GACrCd,KAAA,CAAAgC,aAAA,CAACvB,6BAA6B;IAAC2B,KAAK,EAAEP;EAAO,GACzC7B,KAAA,CAAAgC,aAAA,CAACxB,qBAAqB;IAAC4B,KAAK,EAAEP,OAAO,CAACF;EAAe,GACjD3B,KAAA,CAAAgC,aAAA,CAACtB,kBAAkB;IAACI,SAAS,EAAEA,SAAS;IAAEE,MAAM,EAAEA;EAAM,GACnDH,QAAQ,CACQ,CACD,CACI,CAEvC;AACL,CAAC;AAsBD;AACA;AACA;AACAF,iBAAiB,CAAC0B,QAAQ,GAAG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}