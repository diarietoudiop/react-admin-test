{"ast":null,"code":"import * as React from 'react';\nimport { createElement } from 'react';\nimport DefaultIcon from '@mui/icons-material/ViewList';\nimport { useResourceDefinitions, useGetResourceLabel, useCreatePath, useCanAccess } from 'ra-core';\nimport { MenuItemLink } from './MenuItemLink';\nexport var ResourceMenuItem = function (_a) {\n  var name = _a.name;\n  var resources = useResourceDefinitions();\n  var _b = useCanAccess({\n      action: 'list',\n      resource: name\n    }),\n    canAccess = _b.canAccess,\n    error = _b.error,\n    isPending = _b.isPending;\n  var getResourceLabel = useGetResourceLabel();\n  var createPath = useCreatePath();\n  if (!resources || !resources[name] || isPending || canAccess === false || error != null) return null;\n  return React.createElement(MenuItemLink, {\n    to: createPath({\n      resource: name,\n      type: 'list'\n    }),\n    state: {\n      _scrollToTop: true\n    },\n    primaryText: React.createElement(React.Fragment, null, getResourceLabel(name, 2)),\n    leftIcon: resources[name].icon ? createElement(resources[name].icon) : React.createElement(DefaultIcon, null)\n  });\n};","map":{"version":3,"names":["React","createElement","DefaultIcon","useResourceDefinitions","useGetResourceLabel","useCreatePath","useCanAccess","MenuItemLink","ResourceMenuItem","_a","name","resources","_b","action","resource","canAccess","error","isPending","getResourceLabel","createPath","to","type","state","_scrollToTop","primaryText","Fragment","leftIcon","icon"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/layout/ResourceMenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createElement } from 'react';\nimport DefaultIcon from '@mui/icons-material/ViewList';\n\nimport {\n    useResourceDefinitions,\n    useGetResourceLabel,\n    useCreatePath,\n    useCanAccess,\n} from 'ra-core';\n\nimport { MenuItemLink } from './MenuItemLink';\n\nexport const ResourceMenuItem = ({ name }: { name: string }) => {\n    const resources = useResourceDefinitions();\n    const { canAccess, error, isPending } = useCanAccess({\n        action: 'list',\n        resource: name,\n    });\n    const getResourceLabel = useGetResourceLabel();\n    const createPath = useCreatePath();\n    if (\n        !resources ||\n        !resources[name] ||\n        isPending ||\n        canAccess === false ||\n        error != null\n    )\n        return null;\n    return (\n        <MenuItemLink\n            to={createPath({\n                resource: name,\n                type: 'list',\n            })}\n            state={{ _scrollToTop: true }}\n            primaryText={<>{getResourceLabel(name, 2)}</>}\n            leftIcon={\n                resources[name].icon ? (\n                    createElement(resources[name].icon)\n                ) : (\n                    <DefaultIcon />\n                )\n            }\n        />\n    );\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,WAAW,MAAM,8BAA8B;AAEtD,SACIC,sBAAsB,EACtBC,mBAAmB,EACnBC,aAAa,EACbC,YAAY,QACT,SAAS;AAEhB,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAACC,EAA0B;MAAxBC,IAAI,GAAAD,EAAA,CAAAC,IAAA;EACnC,IAAMC,SAAS,GAAGR,sBAAsB,EAAE;EACpC,IAAAS,EAAA,GAAkCN,YAAY,CAAC;MACjDO,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAEJ;KACb,CAAC;IAHMK,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IAAEC,SAAS,GAAAL,EAAA,CAAAK,SAGjC;EACF,IAAMC,gBAAgB,GAAGd,mBAAmB,EAAE;EAC9C,IAAMe,UAAU,GAAGd,aAAa,EAAE;EAClC,IACI,CAACM,SAAS,IACV,CAACA,SAAS,CAACD,IAAI,CAAC,IAChBO,SAAS,IACTF,SAAS,KAAK,KAAK,IACnBC,KAAK,IAAI,IAAI,EAEb,OAAO,IAAI;EACf,OACIhB,KAAA,CAAAC,aAAA,CAACM,YAAY;IACTa,EAAE,EAAED,UAAU,CAAC;MACXL,QAAQ,EAAEJ,IAAI;MACdW,IAAI,EAAE;KACT,CAAC;IACFC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAI,CAAE;IAC7BC,WAAW,EAAExB,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAyB,QAAA,QAAGP,gBAAgB,CAACR,IAAI,EAAE,CAAC,CAAC,CAAI;IAC7CgB,QAAQ,EACJf,SAAS,CAACD,IAAI,CAAC,CAACiB,IAAI,GAChB1B,aAAa,CAACU,SAAS,CAACD,IAAI,CAAC,CAACiB,IAAI,CAAC,GAEnC3B,KAAA,CAAAC,aAAA,CAACC,WAAW;EACf,EAEP;AAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}