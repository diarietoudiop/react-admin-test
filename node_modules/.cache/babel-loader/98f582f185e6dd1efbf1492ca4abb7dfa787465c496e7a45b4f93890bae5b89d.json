{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { styled } from '@mui/material/styles';\nimport get from 'lodash/get';\nimport { FilterLiveForm, useListContext, useResourceContext } from 'ra-core';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { FilterContext } from '../FilterContext';\nimport { FilterFormInput } from './FilterFormInput';\nexport var FilterForm = function (props) {\n  var filtersProps = props.filters,\n    rest = __rest(props, [\"filters\"]);\n  var filters = useContext(FilterContext) || filtersProps;\n  return React.createElement(FilterLiveForm, __assign({\n    formComponent: StyledForm\n  }, sanitizeRestProps(rest)), React.createElement(FilterFormBase, {\n    filters: filters\n  }));\n};\nexport var FilterFormBase = function (props) {\n  var filters = props.filters;\n  var resource = useResourceContext(props);\n  var form = useFormContext();\n  var _a = useListContext(),\n    _b = _a.displayedFilters,\n    displayedFilters = _b === void 0 ? {} : _b,\n    hideFilter = _a.hideFilter;\n  useEffect(function () {\n    if (!filters) return;\n    filters.forEach(function (filter) {\n      if (filter.props.alwaysOn && filter.props.defaultValue) {\n        throw new Error('Cannot use alwaysOn and defaultValue on a filter input. Please set the filterDefaultValues props on the <List> element instead.');\n      }\n    });\n  }, [filters]);\n  var getShownFilters = function () {\n    if (!filters) return [];\n    var values = form.getValues();\n    return filters.filter(function (filterElement) {\n      var filterValue = get(values, filterElement.props.source);\n      return filterElement.props.alwaysOn || displayedFilters[filterElement.props.source] || !isEmptyValue(filterValue);\n    });\n  };\n  var handleHide = useCallback(function (event) {\n    return hideFilter(event.currentTarget.dataset.key);\n  }, [hideFilter]);\n  return React.createElement(React.Fragment, null, getShownFilters().map(function (filterElement) {\n    return React.createElement(FilterFormInput, {\n      key: filterElement.key || filterElement.props.source,\n      filterElement: filterElement,\n      handleHide: handleHide,\n      resource: resource,\n      className: FilterFormClasses.filterFormInput\n    });\n  }), React.createElement(\"div\", {\n    className: FilterFormClasses.clearFix\n  }));\n};\nvar sanitizeRestProps = function (_a) {\n  var hasCreate = _a.hasCreate,\n    resource = _a.resource,\n    props = __rest(_a, [\"hasCreate\", \"resource\"]);\n  return props;\n};\nvar PREFIX = 'RaFilterForm';\nexport var FilterFormClasses = {\n  clearFix: \"\".concat(PREFIX, \"-clearFix\"),\n  filterFormInput: \"\".concat(PREFIX, \"-filterFormInput\")\n};\nvar StyledForm = styled('form', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    display: 'flex',\n    flex: '0 1 auto'\n  }, _b[theme.breakpoints.down('sm')] = {\n    width: '100%'\n  }, _b[theme.breakpoints.up('sm')] = {\n    minHeight: theme.spacing(8)\n  }, _b[theme.breakpoints.up('md')] = {\n    flex: '0 1 100%'\n  }, _b.flexWrap = 'wrap', _b.alignItems = 'flex-end', _b.pointerEvents = 'none', _b.padding = \"0 0 \".concat(theme.spacing(0.5), \" 0\"), _b['& .MuiFormHelperText-root'] = {\n    display: 'none'\n  }, _b[\"& .\".concat(FilterFormClasses.clearFix)] = {\n    clear: 'right'\n  }, _b[\"& .\".concat(FilterFormClasses.filterFormInput, \" .MuiFormControl-root\")] = {\n    marginTop: \"\".concat(theme.spacing(1))\n  }, _b;\n});\nvar isEmptyValue = function (filterValue) {\n  if (filterValue === '' || filterValue == null) return true;\n  // If one of the value leaf is not empty\n  // the value is considered not empty\n  if (typeof filterValue === 'object') {\n    return Object.keys(filterValue).every(function (key) {\n      return isEmptyValue(filterValue[key]);\n    });\n  }\n  return false;\n};","map":{"version":3,"names":["styled","get","FilterLiveForm","useListContext","useResourceContext","React","useCallback","useContext","useEffect","useFormContext","FilterContext","FilterFormInput","FilterForm","props","filtersProps","filters","rest","__rest","createElement","__assign","formComponent","StyledForm","sanitizeRestProps","FilterFormBase","resource","form","_a","_b","displayedFilters","hideFilter","forEach","filter","alwaysOn","defaultValue","Error","getShownFilters","values","getValues","filterElement","filterValue","source","isEmptyValue","handleHide","event","currentTarget","dataset","key","Fragment","map","className","FilterFormClasses","filterFormInput","clearFix","hasCreate","PREFIX","concat","name","overridesResolver","styles","root","theme","display","flex","breakpoints","down","width","up","minHeight","spacing","flexWrap","alignItems","pointerEvents","padding","clear","marginTop","Object","keys","every"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/list/filter/FilterForm.tsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport get from 'lodash/get';\nimport { FilterLiveForm, useListContext, useResourceContext } from 'ra-core';\nimport * as React from 'react';\nimport {\n    HtmlHTMLAttributes,\n    ReactNode,\n    useCallback,\n    useContext,\n    useEffect,\n} from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { FilterContext } from '../FilterContext';\nimport { FilterFormInput } from './FilterFormInput';\n\nexport const FilterForm = (props: FilterFormProps) => {\n    const { filters: filtersProps, ...rest } = props;\n    const filters = useContext(FilterContext) || filtersProps;\n\n    return (\n        <FilterLiveForm formComponent={StyledForm} {...sanitizeRestProps(rest)}>\n            <FilterFormBase filters={filters} />\n        </FilterLiveForm>\n    );\n};\n\nexport type FilterFormProps = FilterFormBaseProps;\n\nexport const FilterFormBase = (props: FilterFormBaseProps) => {\n    const { filters } = props;\n    const resource = useResourceContext(props);\n    const form = useFormContext();\n    const { displayedFilters = {}, hideFilter } = useListContext();\n\n    useEffect(() => {\n        if (!filters) return;\n        filters.forEach((filter: JSX.Element) => {\n            if (filter.props.alwaysOn && filter.props.defaultValue) {\n                throw new Error(\n                    'Cannot use alwaysOn and defaultValue on a filter input. Please set the filterDefaultValues props on the <List> element instead.'\n                );\n            }\n        });\n    }, [filters]);\n\n    const getShownFilters = () => {\n        if (!filters) return [];\n        const values = form.getValues();\n        return filters.filter((filterElement: JSX.Element) => {\n            const filterValue = get(values, filterElement.props.source);\n            return (\n                filterElement.props.alwaysOn ||\n                displayedFilters[filterElement.props.source] ||\n                !isEmptyValue(filterValue)\n            );\n        });\n    };\n\n    const handleHide = useCallback(\n        event => hideFilter(event.currentTarget.dataset.key),\n        [hideFilter]\n    );\n\n    return (\n        <>\n            {getShownFilters().map((filterElement: JSX.Element) => (\n                <FilterFormInput\n                    key={filterElement.key || filterElement.props.source}\n                    filterElement={filterElement}\n                    handleHide={handleHide}\n                    resource={resource}\n                    className={FilterFormClasses.filterFormInput}\n                />\n            ))}\n            <div className={FilterFormClasses.clearFix} />\n        </>\n    );\n};\n\nconst sanitizeRestProps = ({\n    hasCreate,\n    resource,\n    ...props\n}: Partial<FilterFormBaseProps> & { hasCreate?: boolean }) => props;\n\nexport type FilterFormBaseProps = Omit<\n    HtmlHTMLAttributes<HTMLFormElement>,\n    'children'\n> & {\n    className?: string;\n    resource?: string;\n    filters?: ReactNode[];\n};\n\nconst PREFIX = 'RaFilterForm';\n\nexport const FilterFormClasses = {\n    clearFix: `${PREFIX}-clearFix`,\n    filterFormInput: `${PREFIX}-filterFormInput`,\n};\n\nconst StyledForm = styled('form', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flex: '0 1 auto',\n    [theme.breakpoints.down('sm')]: {\n        width: '100%',\n    },\n    [theme.breakpoints.up('sm')]: {\n        minHeight: theme.spacing(8),\n    },\n    [theme.breakpoints.up('md')]: {\n        flex: '0 1 100%',\n    },\n    flexWrap: 'wrap',\n    alignItems: 'flex-end',\n    pointerEvents: 'none',\n    padding: `0 0 ${theme.spacing(0.5)} 0`,\n    '& .MuiFormHelperText-root': { display: 'none' },\n    [`& .${FilterFormClasses.clearFix}`]: { clear: 'right' },\n    [`& .${FilterFormClasses.filterFormInput} .MuiFormControl-root`]: {\n        marginTop: `${theme.spacing(1)}`,\n    },\n}));\n\nconst isEmptyValue = (filterValue: unknown) => {\n    if (filterValue === '' || filterValue == null) return true;\n\n    // If one of the value leaf is not empty\n    // the value is considered not empty\n    if (typeof filterValue === 'object') {\n        return Object.keys(filterValue).every(key =>\n            isEmptyValue(filterValue[key])\n        );\n    }\n\n    return false;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}