{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport { alpha, styled } from '@mui/material/styles';\nimport { useUpdateMany, useRefresh, useNotify, useUnselectAll, useResourceContext, useListContext, useTranslate } from 'ra-core';\nimport { Button } from './Button';\nexport var BulkUpdateWithUndoButton = function (props) {\n  var selectedIds = useListContext().selectedIds;\n  var notify = useNotify();\n  var resource = useResourceContext(props);\n  var unselectAll = useUnselectAll(resource);\n  var refresh = useRefresh();\n  var translate = useTranslate();\n  var data = props.data,\n    _a = props.label,\n    label = _a === void 0 ? 'ra.action.update' : _a,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    successMessage = props.successMessage,\n    onClick = props.onClick,\n    _c = props.onSuccess,\n    onSuccess = _c === void 0 ? function () {\n      notify(successMessage !== null && successMessage !== void 0 ? successMessage : \"resources.\".concat(resource, \".notifications.updated\"), {\n        type: 'info',\n        messageArgs: {\n          smart_count: selectedIds.length,\n          _: translate('ra.notification.updated', {\n            smart_count: selectedIds.length\n          })\n        },\n        undoable: true\n      });\n      unselectAll();\n    } : _c,\n    _d = props.onError,\n    onError = _d === void 0 ? function (error) {\n      notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n        type: 'error',\n        messageArgs: {\n          _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n        }\n      });\n      refresh();\n    } : _d,\n    _e = props.mutationOptions,\n    mutationOptions = _e === void 0 ? {} : _e,\n    rest = __rest(props, [\"data\", \"label\", \"icon\", \"successMessage\", \"onClick\", \"onSuccess\", \"onError\", \"mutationOptions\"]);\n  var mutationMeta = mutationOptions.meta,\n    otherMutationOptions = __rest(mutationOptions, [\"meta\"]);\n  var _f = useUpdateMany(resource, {\n      ids: selectedIds,\n      data: data,\n      meta: mutationMeta\n    }, __assign({\n      onSuccess: onSuccess,\n      onError: onError,\n      mutationMode: 'undoable'\n    }, otherMutationOptions)),\n    updateMany = _f[0],\n    isPending = _f[1].isPending;\n  var handleClick = function (e) {\n    updateMany();\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n  };\n  return React.createElement(StyledButton, __assign({\n    onClick: handleClick,\n    label: label,\n    disabled: isPending\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(ActionUpdate, null);\nvar sanitizeRestProps = function (_a) {\n  var label = _a.label,\n    onSuccess = _a.onSuccess,\n    onError = _a.onError,\n    rest = __rest(_a, [\"label\", \"onSuccess\", \"onError\"]);\n  return rest;\n};\nvar PREFIX = 'RaBulkUpdateWithUndoButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n});","map":{"version":3,"names":["React","ActionUpdate","alpha","styled","useUpdateMany","useRefresh","useNotify","useUnselectAll","useResourceContext","useListContext","useTranslate","Button","BulkUpdateWithUndoButton","props","selectedIds","notify","resource","unselectAll","refresh","translate","data","_a","label","_b","icon","defaultIcon","successMessage","onClick","_c","onSuccess","concat","type","messageArgs","smart_count","length","_","undoable","_d","onError","error","message","undefined","_e","mutationOptions","rest","__rest","mutationMeta","meta","otherMutationOptions","_f","ids","__assign","mutationMode","updateMany","isPending","handleClick","e","createElement","StyledButton","disabled","sanitizeRestProps","PREFIX","name","overridesResolver","styles","root","theme","color","palette","primary","main","backgroundColor"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/button/BulkUpdateWithUndoButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement } from 'react';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    useResourceContext,\n    useListContext,\n    RaRecord,\n    UpdateManyParams,\n    useTranslate,\n} from 'ra-core';\nimport { UseMutationOptions } from '@tanstack/react-query';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const BulkUpdateWithUndoButton = (\n    props: BulkUpdateWithUndoButtonProps\n) => {\n    const { selectedIds } = useListContext();\n\n    const notify = useNotify();\n    const resource = useResourceContext(props);\n    const unselectAll = useUnselectAll(resource);\n    const refresh = useRefresh();\n    const translate = useTranslate();\n\n    const {\n        data,\n        label = 'ra.action.update',\n        icon = defaultIcon,\n        successMessage,\n        onClick,\n        onSuccess = () => {\n            notify(\n                successMessage ?? `resources.${resource}.notifications.updated`,\n                {\n                    type: 'info',\n                    messageArgs: {\n                        smart_count: selectedIds.length,\n                        _: translate('ra.notification.updated', {\n                            smart_count: selectedIds.length,\n                        }),\n                    },\n                    undoable: true,\n                }\n            );\n            unselectAll();\n        },\n        onError = (error: Error | string) => {\n            notify(\n                typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error',\n                {\n                    type: 'error',\n                    messageArgs: {\n                        _:\n                            typeof error === 'string'\n                                ? error\n                                : error && error.message\n                                  ? error.message\n                                  : undefined,\n                    },\n                }\n            );\n            refresh();\n        },\n        mutationOptions = {},\n        ...rest\n    } = props;\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\n\n    const [updateMany, { isPending }] = useUpdateMany(\n        resource,\n        { ids: selectedIds, data, meta: mutationMeta },\n        {\n            onSuccess,\n            onError,\n            mutationMode: 'undoable',\n            ...otherMutationOptions,\n        }\n    );\n\n    const handleClick = e => {\n        updateMany();\n        if (typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n\n    return (\n        <StyledButton\n            onClick={handleClick}\n            label={label}\n            disabled={isPending}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\nconst defaultIcon = <ActionUpdate />;\n\nconst sanitizeRestProps = ({\n    label,\n    onSuccess,\n    onError,\n    ...rest\n}: Omit<BulkUpdateWithUndoButtonProps, 'resource' | 'icon' | 'data'>) => rest;\n\nexport interface BulkUpdateWithUndoButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown,\n> extends ButtonProps {\n    icon?: ReactElement;\n    data: any;\n    onSuccess?: () => void;\n    onError?: (error: any) => void;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        UpdateManyParams<RecordType>\n    > & { meta?: any };\n    successMessage?: string;\n}\n\nconst PREFIX = 'RaBulkUpdateWithUndoButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.primary.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}