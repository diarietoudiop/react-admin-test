{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport * as React from 'react';\nimport { Stack, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { FieldTitle } from 'ra-core';\n/**\n * Wrap a field or an input with a label if necessary.\n *\n * The label is displayed if:\n * - the field or input has a label prop that is not false, or\n * - the field or input has a source prop\n *\n * @example\n * <Labeled>\n *     <FooComponent source=\"title\" />\n * </Labeled>\n */\nexport var Labeled = function (_a) {\n  var _b;\n  var _c, _d;\n  var children = _a.children,\n    _e = _a.className,\n    className = _e === void 0 ? '' : _e,\n    color = _a.color,\n    _f = _a.component,\n    component = _f === void 0 ? 'span' : _f,\n    fullWidth = _a.fullWidth,\n    isRequired = _a.isRequired,\n    label = _a.label,\n    resource = _a.resource,\n    source = _a.source,\n    TypographyProps = _a.TypographyProps,\n    rest = __rest(_a, [\"children\", \"className\", \"color\", \"component\", \"fullWidth\", \"isRequired\", \"label\", \"resource\", \"source\", \"TypographyProps\"]);\n  return React.createElement(Root\n  // @ts-ignore https://github.com/mui/material-ui/issues/29875\n  , __assign({\n    // @ts-ignore https://github.com/mui/material-ui/issues/29875\n    component: component,\n    className: clsx(className, (_b = {}, _b[LabeledClasses.fullWidth] = fullWidth, _b))\n  }, rest), label !== false && children.props.label !== false && typeof children.type !== 'string' &&\n  // @ts-ignore\n  ((_c = children.type) === null || _c === void 0 ? void 0 : _c.displayName) !== 'Labeled' &&\n  // @ts-ignore\n  ((_d = children.type) === null || _d === void 0 ? void 0 : _d.displayName) !== 'Labeled' ? React.createElement(Typography, __assign({\n    sx: color ? undefined : {\n      color: function (theme) {\n        return theme.palette.text.secondary;\n      }\n    },\n    color: color,\n    className: LabeledClasses.label\n  }, TypographyProps), React.createElement(FieldTitle, {\n    label: label || children.props.label,\n    source: source || children.props.source,\n    resource: resource,\n    isRequired: isRequired\n  })) : null, children);\n};\nLabeled.displayName = 'Labeled';\nvar PREFIX = 'RaLabeled';\nexport var LabeledClasses = {\n  label: \"\".concat(PREFIX, \"-label\"),\n  fullWidth: \"\".concat(PREFIX, \"-fullWidth\")\n};\nvar Root = styled(Stack, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})((_a = {\n  display: 'inline-flex',\n  marginBottom: '0.2em'\n}, _a[\"&.\".concat(LabeledClasses.fullWidth)] = {\n  width: '100%'\n}, _a[\"& .\".concat(LabeledClasses.label)] = {\n  fontSize: '0.75em',\n  marginBottom: '0.2em'\n}, _a));","map":{"version":3,"names":["React","Stack","Typography","styled","clsx","FieldTitle","Labeled","_a","children","_e","className","color","_f","component","fullWidth","isRequired","label","resource","source","TypographyProps","rest","__rest","createElement","Root","_b","LabeledClasses","props","type","_c","displayName","_d","__assign","sx","undefined","theme","palette","text","secondary","PREFIX","concat","name","overridesResolver","styles","root","display","marginBottom","width","fontSize"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/Labeled.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ElementType, ReactElement } from 'react';\nimport {\n    Stack,\n    StackProps,\n    Theme,\n    Typography,\n    TypographyProps,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Property } from 'csstype';\nimport clsx from 'clsx';\n\nimport { FieldTitle } from 'ra-core';\nimport { ResponsiveStyleValue } from '@mui/system';\n\n/**\n * Wrap a field or an input with a label if necessary.\n *\n * The label is displayed if:\n * - the field or input has a label prop that is not false, or\n * - the field or input has a source prop\n *\n * @example\n * <Labeled>\n *     <FooComponent source=\"title\" />\n * </Labeled>\n */\nexport const Labeled = ({\n    children,\n    className = '',\n    color,\n    component = 'span',\n    fullWidth,\n    isRequired,\n    label,\n    resource,\n    source,\n    TypographyProps,\n    ...rest\n}: LabeledProps) => (\n    <Root\n        // @ts-ignore https://github.com/mui/material-ui/issues/29875\n        component={component}\n        className={clsx(className, {\n            [LabeledClasses.fullWidth]: fullWidth,\n        })}\n        {...rest}\n    >\n        {label !== false &&\n        children.props.label !== false &&\n        typeof children.type !== 'string' &&\n        // @ts-ignore\n        children.type?.displayName !== 'Labeled' &&\n        // @ts-ignore\n        children.type?.displayName !== 'Labeled' ? (\n            <Typography\n                sx={\n                    color\n                        ? undefined\n                        : {\n                              color: theme => theme.palette.text.secondary,\n                          }\n                }\n                color={color}\n                className={LabeledClasses.label}\n                {...TypographyProps}\n            >\n                <FieldTitle\n                    label={label || children.props.label}\n                    source={source || children.props.source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            </Typography>\n        ) : null}\n        {children}\n    </Root>\n);\n\nLabeled.displayName = 'Labeled';\n\nexport interface LabeledProps extends StackProps {\n    children: ReactElement;\n    className?: string;\n    color?:\n        | ResponsiveStyleValue<Property.Color | Property.Color[]>\n        | ((\n              theme: Theme\n          ) => ResponsiveStyleValue<Property.Color | Property.Color[]>);\n    component?: ElementType;\n    fullWidth?: boolean;\n    htmlFor?: string;\n    isRequired?: boolean;\n    label?: string | ReactElement | boolean;\n    resource?: string;\n    source?: string;\n    TypographyProps?: TypographyProps;\n}\n\nconst PREFIX = 'RaLabeled';\n\nexport const LabeledClasses = {\n    label: `${PREFIX}-label`,\n    fullWidth: `${PREFIX}-fullWidth`,\n};\n\nconst Root = styled(Stack, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    display: 'inline-flex',\n    marginBottom: '0.2em',\n\n    [`&.${LabeledClasses.fullWidth}`]: {\n        width: '100%',\n    },\n\n    [`& .${LabeledClasses.label}`]: {\n        fontSize: '0.75em',\n        marginBottom: '0.2em',\n    },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SACIC,KAAK,EAGLC,UAAU,QAEP,eAAe;AACtB,SAASC,MAAM,QAAQ,sBAAsB;AAE7C,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,UAAU,QAAQ,SAAS;AAGpC;;;;;;;;;;;;AAYA,OAAO,IAAMC,OAAO,GAAG,SAAAA,CAACC,EAYT;;;EAXX,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,EAAA,GAAAF,EAAA,CAAAG,SAAc;IAAdA,SAAS,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;IACdE,KAAK,GAAAJ,EAAA,CAAAI,KAAA;IACLC,EAAA,GAAAL,EAAA,CAAAM,SAAkB;IAAlBA,SAAS,GAAAD,EAAA,cAAG,MAAM,GAAAA,EAAA;IAClBE,SAAS,GAAAP,EAAA,CAAAO,SAAA;IACTC,UAAU,GAAAR,EAAA,CAAAQ,UAAA;IACVC,KAAK,GAAAT,EAAA,CAAAS,KAAA;IACLC,QAAQ,GAAAV,EAAA,CAAAU,QAAA;IACRC,MAAM,GAAAX,EAAA,CAAAW,MAAA;IACNC,eAAe,GAAAZ,EAAA,CAAAY,eAAA;IACZC,IAAI,GAAAC,MAAA,CAAAd,EAAA,EAXa,4HAYvB,CADU;EACS,OAChBP,KAAA,CAAAsB,aAAA,CAACC;EACG;EAAA,E;IAAA;IACAV,SAAS,EAAEA,SAAS;IACpBH,SAAS,EAAEN,IAAI,CAACM,SAAS,GAAAc,EAAA,OACrBA,EAAA,CAACC,cAAc,CAACX,SAAS,IAAGA,SAAS,E;EACvC,GACEM,IAAI,GAEPJ,KAAK,KAAK,KAAK,IAChBR,QAAQ,CAACkB,KAAK,CAACV,KAAK,KAAK,KAAK,IAC9B,OAAOR,QAAQ,CAACmB,IAAI,KAAK,QAAQ;EACjC;EACA,EAAAC,EAAA,GAAApB,QAAQ,CAACmB,IAAI,cAAAC,EAAA,uBAAAA,EAAA,CAAEC,WAAW,MAAK,SAAS;EACxC;EACA,EAAAC,EAAA,GAAAtB,QAAQ,CAACmB,IAAI,cAAAG,EAAA,uBAAAA,EAAA,CAAED,WAAW,MAAK,SAAS,GACpC7B,KAAA,CAAAsB,aAAA,CAACpB,UAAU,EAAA6B,QAAA;IACPC,EAAE,EACErB,KAAK,GACCsB,SAAS,GACT;MACItB,KAAK,EAAE,SAAAA,CAAAuB,KAAK;QAAI,OAAAA,KAAK,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS;MAA5B;KACnB;IAEX1B,KAAK,EAAEA,KAAK;IACZD,SAAS,EAAEe,cAAc,CAACT;EAAK,GAC3BG,eAAe,GAEnBnB,KAAA,CAAAsB,aAAA,CAACjB,UAAU;IACPW,KAAK,EAAEA,KAAK,IAAIR,QAAQ,CAACkB,KAAK,CAACV,KAAK;IACpCE,MAAM,EAAEA,MAAM,IAAIV,QAAQ,CAACkB,KAAK,CAACR,MAAM;IACvCD,QAAQ,EAAEA,QAAQ;IAClBF,UAAU,EAAEA;EAAU,EACxB,CACO,GACb,IAAI,EACPP,QAAQ,CACN;CACV;AAEDF,OAAO,CAACuB,WAAW,GAAG,SAAS;AAoB/B,IAAMS,MAAM,GAAG,WAAW;AAE1B,OAAO,IAAMb,cAAc,GAAG;EAC1BT,KAAK,EAAE,GAAAuB,MAAA,CAAGD,MAAM,WAAQ;EACxBxB,SAAS,EAAE,GAAAyB,MAAA,CAAGD,MAAM;CACvB;AAED,IAAMf,IAAI,GAAGpB,MAAM,CAACF,KAAK,EAAE;EACvBuC,IAAI,EAAEF,MAAM;EACZG,iBAAiB,EAAE,SAAAA,CAACf,KAAK,EAAEgB,MAAM;IAAK,OAAAA,MAAM,CAACC,IAAI;EAAX;CACzC,CAAC,EAAApC,EAAA;EACEqC,OAAO,EAAE,aAAa;EACtBC,YAAY,EAAE;GAEdtC,EAAA,CAAC,KAAAgC,MAAA,CAAKd,cAAc,CAACX,SAAS,CAAE,IAAG;EAC/BgC,KAAK,EAAE;CACV,EAEDvC,EAAA,CAAC,MAAAgC,MAAA,CAAMd,cAAc,CAACT,KAAK,CAAE,IAAG;EAC5B+B,QAAQ,EAAE,QAAQ;EAClBF,YAAY,EAAE;CACjB,E,IACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}