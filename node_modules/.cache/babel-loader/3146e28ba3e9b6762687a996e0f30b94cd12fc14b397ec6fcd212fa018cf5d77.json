{"ast":null,"code":"import * as React from 'react';\nimport { Navigate } from 'react-router';\nimport { useFirstResourceWithListAccess } from './useFirstResourceWithListAccess';\nimport { useCreatePath } from '../routing';\n/**\n * This component will inspect the registered resources and navigate to the first one for which users have access to the list page.\n * @param props\n * @param props.loading The component to display while the component is loading.\n */\nexport var NavigateToFirstResource = function (_a) {\n  var LoadingPage = _a.loading;\n  var _b = useFirstResourceWithListAccess(),\n    resource = _b.resource,\n    isPending = _b.isPending;\n  var createPath = useCreatePath();\n  if (isPending) {\n    return React.createElement(LoadingPage, null);\n  }\n  if (resource) {\n    return React.createElement(Navigate, {\n      to: createPath({\n        resource: resource,\n        type: 'list'\n      }),\n      replace: true\n    });\n  }\n};","map":{"version":3,"names":["React","Navigate","useFirstResourceWithListAccess","useCreatePath","NavigateToFirstResource","_a","LoadingPage","loading","_b","resource","isPending","createPath","createElement","to","type","replace"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-core/src/core/NavigateToFirstResource.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Navigate } from 'react-router';\nimport { useFirstResourceWithListAccess } from './useFirstResourceWithListAccess';\nimport { useCreatePath } from '../routing';\n\n/**\n * This component will inspect the registered resources and navigate to the first one for which users have access to the list page.\n * @param props\n * @param props.loading The component to display while the component is loading.\n */\nexport const NavigateToFirstResource = ({\n    loading: LoadingPage,\n}: NavigateToFirstResourceProps) => {\n    const { resource, isPending } = useFirstResourceWithListAccess();\n    const createPath = useCreatePath();\n\n    if (isPending) {\n        return <LoadingPage />;\n    }\n\n    if (resource) {\n        return (\n            <Navigate\n                to={createPath({\n                    resource,\n                    type: 'list',\n                })}\n                replace={true}\n            />\n        );\n    }\n};\n\nexport type NavigateToFirstResourceProps = {\n    loading: React.ComponentType;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,8BAA8B,QAAQ,kCAAkC;AACjF,SAASC,aAAa,QAAQ,YAAY;AAE1C;;;;;AAKA,OAAO,IAAMC,uBAAuB,GAAG,SAAAA,CAACC,EAET;MADlBC,WAAW,GAAAD,EAAA,CAAAE,OAAA;EAEd,IAAAC,EAAA,GAA0BN,8BAA8B,EAAE;IAAxDO,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IAAEC,SAAS,GAAAF,EAAA,CAAAE,SAAqC;EAChE,IAAMC,UAAU,GAAGR,aAAa,EAAE;EAElC,IAAIO,SAAS,EAAE;IACX,OAAOV,KAAA,CAAAY,aAAA,CAACN,WAAW,OAAG;;EAG1B,IAAIG,QAAQ,EAAE;IACV,OACIT,KAAA,CAAAY,aAAA,CAACX,QAAQ;MACLY,EAAE,EAAEF,UAAU,CAAC;QACXF,QAAQ,EAAAA,QAAA;QACRK,IAAI,EAAE;OACT,CAAC;MACFC,OAAO,EAAE;IAAI,EACf;;AAGd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}