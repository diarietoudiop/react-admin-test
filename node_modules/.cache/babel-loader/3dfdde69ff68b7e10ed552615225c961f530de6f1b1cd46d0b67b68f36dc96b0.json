{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useCallback } from 'react';\nimport { useDelete } from '../../dataProvider';\nimport { useUnselect } from '../../controller';\nimport { useRedirect } from '../../routing';\nimport { useNotify } from '../../notification';\nimport { useResourceContext } from '../../core';\nimport { useTranslate } from '../../i18n';\n/**\n * Prepare callback for a Delete button with undo support\n *\n * @example\n *\n * import React from 'react';\n * import ActionDelete from '@mui/icons-material/Delete';\n * import { Button, useDeleteWithUndoController } from 'react-admin';\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const { isPending, handleDelete } = useDeleteWithUndoController({\n *         resource,\n *         record,\n *         redirect,\n *         onClick,\n *     });\n *\n *     return (\n *         <Button\n *             onClick={handleDelete}\n *             disabled={isPending}\n *             label=\"ra.action.delete\"\n *             {...rest}\n *         >\n *             <ActionDelete />\n *         </Button>\n *     );\n * };\n */\nvar useDeleteWithUndoController = function (props) {\n  var record = props.record,\n    _a = props.redirect,\n    redirectTo = _a === void 0 ? 'list' : _a,\n    onClick = props.onClick,\n    _b = props.mutationOptions,\n    mutationOptions = _b === void 0 ? {} : _b,\n    successMessage = props.successMessage;\n  var mutationMeta = mutationOptions.meta,\n    otherMutationOptions = __rest(mutationOptions, [\"meta\"]);\n  var resource = useResourceContext(props);\n  var notify = useNotify();\n  var unselect = useUnselect(resource);\n  var redirect = useRedirect();\n  var translate = useTranslate();\n  var _c = useDelete(resource, undefined, {\n      onSuccess: function () {\n        notify(successMessage !== null && successMessage !== void 0 ? successMessage : \"resources.\".concat(resource, \".notifications.deleted\"), {\n          type: 'info',\n          messageArgs: {\n            smart_count: 1,\n            _: translate('ra.notification.deleted', {\n              smart_count: 1\n            })\n          },\n          undoable: true\n        });\n        record && unselect([record.id]);\n        redirect(redirectTo, resource);\n      },\n      onError: function (error) {\n        notify(typeof error === 'string' ? error : (error === null || error === void 0 ? void 0 : error.message) || 'ra.notification.http_error', {\n          type: 'error',\n          messageArgs: {\n            _: typeof error === 'string' ? error : (error === null || error === void 0 ? void 0 : error.message) ? error.message : undefined\n          }\n        });\n      }\n    }),\n    deleteOne = _c[0],\n    isPending = _c[1].isPending;\n  var handleDelete = useCallback(function (event) {\n    event.stopPropagation();\n    if (!record) {\n      throw new Error('The record cannot be deleted because no record has been passed');\n    }\n    deleteOne(resource, {\n      id: record.id,\n      previousData: record,\n      meta: mutationMeta\n    }, __assign({\n      mutationMode: 'undoable'\n    }, otherMutationOptions));\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [deleteOne, mutationMeta, otherMutationOptions, onClick, record, resource]);\n  return {\n    isPending: isPending,\n    isLoading: isPending,\n    handleDelete: handleDelete\n  };\n};\nexport default useDeleteWithUndoController;","map":{"version":3,"names":["useCallback","useDelete","useUnselect","useRedirect","useNotify","useResourceContext","useTranslate","useDeleteWithUndoController","props","record","_a","redirect","redirectTo","onClick","_b","mutationOptions","successMessage","mutationMeta","meta","otherMutationOptions","__rest","resource","notify","unselect","translate","_c","undefined","onSuccess","concat","type","messageArgs","smart_count","_","undoable","id","onError","error","message","deleteOne","isPending","handleDelete","event","stopPropagation","Error","previousData","__assign","mutationMode","isLoading"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-core/src/controller/button/useDeleteWithUndoController.tsx"],"sourcesContent":["import { useCallback, ReactEventHandler } from 'react';\nimport { UseMutationOptions } from '@tanstack/react-query';\n\nimport { useDelete } from '../../dataProvider';\nimport { useUnselect } from '../../controller';\nimport { useRedirect, RedirectionSideEffect } from '../../routing';\nimport { useNotify } from '../../notification';\nimport { RaRecord, DeleteParams } from '../../types';\nimport { useResourceContext } from '../../core';\nimport { useTranslate } from '../../i18n';\n\n/**\n * Prepare callback for a Delete button with undo support\n *\n * @example\n *\n * import React from 'react';\n * import ActionDelete from '@mui/icons-material/Delete';\n * import { Button, useDeleteWithUndoController } from 'react-admin';\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const { isPending, handleDelete } = useDeleteWithUndoController({\n *         resource,\n *         record,\n *         redirect,\n *         onClick,\n *     });\n *\n *     return (\n *         <Button\n *             onClick={handleDelete}\n *             disabled={isPending}\n *             label=\"ra.action.delete\"\n *             {...rest}\n *         >\n *             <ActionDelete />\n *         </Button>\n *     );\n * };\n */\nconst useDeleteWithUndoController = <\n    RecordType extends RaRecord = any,\n    ErrorType = Error,\n>(\n    props: UseDeleteWithUndoControllerParams<RecordType, ErrorType>\n): UseDeleteWithUndoControllerReturn => {\n    const {\n        record,\n        redirect: redirectTo = 'list',\n        onClick,\n        mutationOptions = {},\n        successMessage,\n    } = props;\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\n    const resource = useResourceContext(props);\n    const notify = useNotify();\n    const unselect = useUnselect(resource);\n    const redirect = useRedirect();\n    const translate = useTranslate();\n    const [deleteOne, { isPending }] = useDelete<RecordType, ErrorType>(\n        resource,\n        undefined,\n        {\n            onSuccess: () => {\n                notify(\n                    successMessage ??\n                        `resources.${resource}.notifications.deleted`,\n                    {\n                        type: 'info',\n                        messageArgs: {\n                            smart_count: 1,\n                            _: translate('ra.notification.deleted', {\n                                smart_count: 1,\n                            }),\n                        },\n                        undoable: true,\n                    }\n                );\n                record && unselect([record.id]);\n                redirect(redirectTo, resource);\n            },\n            onError: error => {\n                notify(\n                    typeof error === 'string'\n                        ? error\n                        : (error as Error)?.message ||\n                              'ra.notification.http_error',\n                    {\n                        type: 'error',\n                        messageArgs: {\n                            _:\n                                typeof error === 'string'\n                                    ? error\n                                    : (error as Error)?.message\n                                      ? (error as Error).message\n                                      : undefined,\n                        },\n                    }\n                );\n            },\n        }\n    );\n\n    const handleDelete = useCallback(\n        event => {\n            event.stopPropagation();\n            if (!record) {\n                throw new Error(\n                    'The record cannot be deleted because no record has been passed'\n                );\n            }\n            deleteOne(\n                resource,\n                {\n                    id: record.id,\n                    previousData: record,\n                    meta: mutationMeta,\n                },\n                {\n                    mutationMode: 'undoable',\n                    ...otherMutationOptions,\n                }\n            );\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [\n            deleteOne,\n            mutationMeta,\n            otherMutationOptions,\n            onClick,\n            record,\n            resource,\n        ]\n    );\n\n    return { isPending, isLoading: isPending, handleDelete };\n};\n\nexport interface UseDeleteWithUndoControllerParams<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown,\n> {\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    onClick?: ReactEventHandler<any>;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n    successMessage?: string;\n}\n\nexport interface UseDeleteWithUndoControllerReturn {\n    isPending: boolean;\n    isLoading: boolean;\n    handleDelete: ReactEventHandler<any>;\n}\n\nexport default useDeleteWithUndoController;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}