{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { warning } from 'ra-core';\nimport { PageTitle } from './PageTitle';\nimport { PageTitleConfigurable } from './PageTitleConfigurable';\nexport var Title = function (props) {\n  var defaultTitle = props.defaultTitle,\n    title = props.title,\n    preferenceKey = props.preferenceKey,\n    rest = __rest(props, [\"defaultTitle\", \"title\", \"preferenceKey\"]);\n  var _a = useState(function () {\n      return typeof document !== 'undefined' ? document.getElementById('react-admin-title') : null;\n    }),\n    container = _a[0],\n    setContainer = _a[1];\n  // on first mount, we don't have the container yet, so we wait for it\n  useEffect(function () {\n    setContainer(function (container) {\n      var isInTheDom = typeof document !== 'undefined' && document.body.contains(container);\n      if (container && isInTheDom) return container;\n      return typeof document !== 'undefined' ? document.getElementById('react-admin-title') : null;\n    });\n  }, []);\n  if (!container) return null;\n  warning(!defaultTitle && !title, 'Missing title prop in <Title> element');\n  var pageTitle = preferenceKey === false ? React.createElement(PageTitle, __assign({\n    title: title,\n    defaultTitle: defaultTitle\n  }, rest)) : React.createElement(PageTitleConfigurable, __assign({\n    title: title,\n    defaultTitle: defaultTitle,\n    preferenceKey: preferenceKey\n  }, rest));\n  return React.createElement(React.Fragment, null, createPortal(pageTitle, container));\n};","map":{"version":3,"names":["React","useEffect","useState","createPortal","warning","PageTitle","PageTitleConfigurable","Title","props","defaultTitle","title","preferenceKey","rest","__rest","_a","document","getElementById","container","setContainer","isInTheDom","body","contains","pageTitle","createElement","__assign","Fragment"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/layout/Title.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ReactElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport { RaRecord, TitleComponent, warning } from 'ra-core';\n\nimport { PageTitle } from './PageTitle';\nimport { PageTitleConfigurable } from './PageTitleConfigurable';\n\nexport const Title = (props: TitleProps) => {\n    const { defaultTitle, title, preferenceKey, ...rest } = props;\n    const [container, setContainer] = useState<HTMLElement | null>(() =>\n        typeof document !== 'undefined'\n            ? document.getElementById('react-admin-title')\n            : null\n    );\n\n    // on first mount, we don't have the container yet, so we wait for it\n    useEffect(() => {\n        setContainer(container => {\n            const isInTheDom =\n                typeof document !== 'undefined' &&\n                document.body.contains(container);\n            if (container && isInTheDom) return container;\n            return typeof document !== 'undefined'\n                ? document.getElementById('react-admin-title')\n                : null;\n        });\n    }, []);\n\n    if (!container) return null;\n\n    warning(!defaultTitle && !title, 'Missing title prop in <Title> element');\n\n    const pageTitle =\n        preferenceKey === false ? (\n            <PageTitle title={title} defaultTitle={defaultTitle} {...rest} />\n        ) : (\n            <PageTitleConfigurable\n                title={title}\n                defaultTitle={defaultTitle}\n                preferenceKey={preferenceKey}\n                {...rest}\n            />\n        );\n\n    return <>{createPortal(pageTitle, container)}</>;\n};\n\nexport interface TitleProps {\n    className?: string;\n    defaultTitle?: TitleComponent;\n    record?: Partial<RaRecord>;\n    title?: string | ReactElement;\n    preferenceKey?: string | false;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,YAAY,QAAQ,WAAW;AACxC,SAAmCC,OAAO,QAAQ,SAAS;AAE3D,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,qBAAqB,QAAQ,yBAAyB;AAE/D,OAAO,IAAMC,KAAK,GAAG,SAAAA,CAACC,KAAiB;EAC3B,IAAAC,YAAY,GAAoCD,KAAK,CAAAC,YAAzC;IAAEC,KAAK,GAA6BF,KAAK,CAAAE,KAAlC;IAAEC,aAAa,GAAcH,KAAK,CAAAG,aAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKL,KAAK,EAAvD,0CAA+C,CAAF;EAC7C,IAAAM,EAAA,GAA4BZ,QAAQ,CAAqB;MAC3D,cAAOa,QAAQ,KAAK,WAAW,GACzBA,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,GAC5C,IAAI;IAFV,CAEU,CACb;IAJMC,SAAS,GAAAH,EAAA;IAAEI,YAAY,GAAAJ,EAAA,GAI7B;EAED;EACAb,SAAS,CAAC;IACNiB,YAAY,CAAC,UAAAD,SAAS;MAClB,IAAME,UAAU,GACZ,OAAOJ,QAAQ,KAAK,WAAW,IAC/BA,QAAQ,CAACK,IAAI,CAACC,QAAQ,CAACJ,SAAS,CAAC;MACrC,IAAIA,SAAS,IAAIE,UAAU,EAAE,OAAOF,SAAS;MAC7C,OAAO,OAAOF,QAAQ,KAAK,WAAW,GAChCA,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,GAC5C,IAAI;IACd,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACC,SAAS,EAAE,OAAO,IAAI;EAE3Bb,OAAO,CAAC,CAACK,YAAY,IAAI,CAACC,KAAK,EAAE,uCAAuC,CAAC;EAEzE,IAAMY,SAAS,GACXX,aAAa,KAAK,KAAK,GACnBX,KAAA,CAAAuB,aAAA,CAAClB,SAAS,EAAAmB,QAAA;IAACd,KAAK,EAAEA,KAAK;IAAED,YAAY,EAAEA;EAAY,GAAMG,IAAI,EAAI,GAEjEZ,KAAA,CAAAuB,aAAA,CAACjB,qBAAqB,EAAAkB,QAAA;IAClBd,KAAK,EAAEA,KAAK;IACZD,YAAY,EAAEA,YAAY;IAC1BE,aAAa,EAAEA;EAAa,GACxBC,IAAI,EAEf;EAEL,OAAOZ,KAAA,CAAAuB,aAAA,CAAAvB,KAAA,CAAAyB,QAAA,QAAGtB,YAAY,CAACmB,SAAS,EAAEL,SAAS,CAAC,CAAI;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}