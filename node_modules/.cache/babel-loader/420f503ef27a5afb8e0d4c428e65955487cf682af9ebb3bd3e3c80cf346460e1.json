{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport set from 'lodash/set';\nimport removeEmpty from '../../util/removeEmpty';\nimport removeKey from '../../util/removeKey';\nexport var SET_SORT = 'SET_SORT';\nexport var SORT_ASC = 'ASC';\nexport var SORT_DESC = 'DESC';\nexport var SET_PAGE = 'SET_PAGE';\nexport var SET_PER_PAGE = 'SET_PER_PAGE';\nexport var SET_FILTER = 'SET_FILTER';\nexport var SHOW_FILTER = 'SHOW_FILTER';\nexport var HIDE_FILTER = 'HIDE_FILTER';\nvar oppositeOrder = function (direction) {\n  return direction === SORT_DESC ? SORT_ASC : SORT_DESC;\n};\n/**\n * This reducer is for the react-router query string.\n */\nexport var queryReducer = function (previousState, action) {\n  var _a;\n  var _b;\n  switch (action.type) {\n    case SET_SORT:\n      if (action.payload.field === previousState.sort) {\n        return __assign(__assign({}, previousState), {\n          order: (_b = action.payload.order) !== null && _b !== void 0 ? _b : oppositeOrder(previousState.order),\n          page: 1\n        });\n      }\n      return __assign(__assign({}, previousState), {\n        sort: action.payload.field,\n        order: action.payload.order || SORT_ASC,\n        page: 1\n      });\n    case SET_PAGE:\n      return __assign(__assign({}, previousState), {\n        page: action.payload\n      });\n    case SET_PER_PAGE:\n      return __assign(__assign({}, previousState), {\n        page: 1,\n        perPage: action.payload\n      });\n    case SET_FILTER:\n      {\n        return __assign(__assign({}, previousState), {\n          page: 1,\n          filter: action.payload.filter,\n          displayedFilters: action.payload.displayedFilters ? action.payload.displayedFilters : previousState.displayedFilters\n        });\n      }\n    case SHOW_FILTER:\n      {\n        if (previousState.displayedFilters && previousState.displayedFilters[action.payload.filterName]) {\n          // the filter is already shown\n          return previousState;\n        }\n        return __assign(__assign({}, previousState), {\n          filter: typeof action.payload.defaultValue !== 'undefined' ? set(previousState.filter, action.payload.filterName, action.payload.defaultValue) : previousState.filter,\n          // we don't use lodash.set() for displayed filters\n          // to avoid problems with compound filter names (e.g. 'author.name')\n          displayedFilters: __assign(__assign({}, previousState.displayedFilters), (_a = {}, _a[action.payload.filterName] = true, _a))\n        });\n      }\n    case HIDE_FILTER:\n      {\n        return __assign(__assign({}, previousState), {\n          filter: removeEmpty(removeKey(previousState.filter, action.payload)),\n          // we don't use lodash.set() for displayed filters\n          // to avoid problems with compound filter names (e.g. 'author.name')\n          displayedFilters: previousState.displayedFilters ? Object.keys(previousState.displayedFilters).reduce(function (filters, filter) {\n            var _a;\n            return filter !== action.payload ? __assign(__assign({}, filters), (_a = {}, _a[filter] = true, _a)) : filters;\n          }, {}) : previousState.displayedFilters\n        });\n      }\n    default:\n      return previousState;\n  }\n};\nexport default queryReducer;","map":{"version":3,"names":["set","removeEmpty","removeKey","SET_SORT","SORT_ASC","SORT_DESC","SET_PAGE","SET_PER_PAGE","SET_FILTER","SHOW_FILTER","HIDE_FILTER","oppositeOrder","direction","queryReducer","previousState","action","type","payload","field","sort","__assign","order","_b","page","perPage","filter","displayedFilters","filterName","defaultValue","_a","Object","keys","reduce","filters"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-core/src/controller/list/queryReducer.ts"],"sourcesContent":["import { Reducer } from 'react';\nimport set from 'lodash/set';\n\nimport removeEmpty from '../../util/removeEmpty';\nimport removeKey from '../../util/removeKey';\nimport { ListParams } from './useListParams';\n\nexport const SET_SORT = 'SET_SORT';\nexport const SORT_ASC = 'ASC';\nexport const SORT_DESC = 'DESC';\n\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_PER_PAGE = 'SET_PER_PAGE';\n\nexport const SET_FILTER = 'SET_FILTER';\nexport const SHOW_FILTER = 'SHOW_FILTER';\nexport const HIDE_FILTER = 'HIDE_FILTER';\n\nconst oppositeOrder = direction =>\n    direction === SORT_DESC ? SORT_ASC : SORT_DESC;\n\ntype ActionTypes =\n    | {\n          type: typeof SET_SORT;\n          payload: {\n              field: string;\n              order?: typeof SORT_ASC | typeof SORT_DESC;\n          };\n      }\n    | {\n          type: typeof SET_PAGE;\n          payload: number;\n      }\n    | {\n          type: typeof SET_PER_PAGE;\n          payload: number;\n      }\n    | {\n          type: typeof SET_FILTER;\n          payload: {\n              filter: any;\n              displayedFilters?: { [key: string]: boolean };\n          };\n      }\n    | {\n          type: typeof SHOW_FILTER;\n          payload: { filterName: string; defaultValue?: any };\n      }\n    | {\n          type: typeof HIDE_FILTER;\n          payload: string;\n      };\n\n/**\n * This reducer is for the react-router query string.\n */\nexport const queryReducer: Reducer<ListParams, ActionTypes> = (\n    previousState,\n    action\n) => {\n    switch (action.type) {\n        case SET_SORT:\n            if (action.payload.field === previousState.sort) {\n                return {\n                    ...previousState,\n                    order:\n                        action.payload.order ??\n                        oppositeOrder(previousState.order),\n                    page: 1,\n                };\n            }\n\n            return {\n                ...previousState,\n                sort: action.payload.field,\n                order: action.payload.order || SORT_ASC,\n                page: 1,\n            };\n\n        case SET_PAGE:\n            return { ...previousState, page: action.payload };\n\n        case SET_PER_PAGE:\n            return { ...previousState, page: 1, perPage: action.payload };\n\n        case SET_FILTER: {\n            return {\n                ...previousState,\n                page: 1,\n                filter: action.payload.filter,\n                displayedFilters: action.payload.displayedFilters\n                    ? action.payload.displayedFilters\n                    : previousState.displayedFilters,\n            };\n        }\n\n        case SHOW_FILTER: {\n            if (\n                previousState.displayedFilters &&\n                previousState.displayedFilters[action.payload.filterName]\n            ) {\n                // the filter is already shown\n                return previousState;\n            }\n            return {\n                ...previousState,\n                filter:\n                    typeof action.payload.defaultValue !== 'undefined'\n                        ? set(\n                              previousState.filter,\n                              action.payload.filterName,\n                              action.payload.defaultValue\n                          )\n                        : previousState.filter,\n                // we don't use lodash.set() for displayed filters\n                // to avoid problems with compound filter names (e.g. 'author.name')\n                displayedFilters: {\n                    ...previousState.displayedFilters,\n                    [action.payload.filterName]: true,\n                },\n            };\n        }\n\n        case HIDE_FILTER: {\n            return {\n                ...previousState,\n                filter: removeEmpty(\n                    removeKey(previousState.filter, action.payload)\n                ),\n                // we don't use lodash.set() for displayed filters\n                // to avoid problems with compound filter names (e.g. 'author.name')\n                displayedFilters: previousState.displayedFilters\n                    ? Object.keys(previousState.displayedFilters).reduce(\n                          (filters, filter) => {\n                              return filter !== action.payload\n                                  ? { ...filters, [filter]: true }\n                                  : filters;\n                          },\n                          {}\n                      )\n                    : previousState.displayedFilters,\n            };\n        }\n\n        default:\n            return previousState;\n    }\n};\n\nexport default queryReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}