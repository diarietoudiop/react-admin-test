{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport * as React from 'react';\nimport { ListItem, ListItemButton } from '@mui/material';\nimport { useEvent, useGetPathForRecord, useGetPathForRecordCallback, useRecordContext, useResourceContext } from 'ra-core';\nimport { Link, useNavigate } from 'react-router-dom';\nexport var SimpleListItem = function (props) {\n  var children = props.children,\n    linkType = props.linkType,\n    rowClick = props.rowClick,\n    rowIndex = props.rowIndex,\n    rowSx = props.rowSx,\n    rowStyle = props.rowStyle;\n  var resource = useResourceContext(props);\n  var record = useRecordContext(props);\n  var navigate = useNavigate();\n  // If we don't have a function to get the path, we can compute the path immediately and set the href\n  // on the Link correctly without onClick (better for accessibility)\n  var isFunctionLink = typeof linkType === 'function' || typeof rowClick === 'function';\n  var pathForRecord = useGetPathForRecord({\n    link: isFunctionLink ? false : linkType !== null && linkType !== void 0 ? linkType : rowClick,\n    resource: resource\n  });\n  var getPathForRecord = useGetPathForRecordCallback();\n  var handleClick = useEvent(function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var link, path;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // No need to handle non function linkType or rowClick\n            if (!isFunctionLink) return [2 /*return*/];\n            if (!record) return [2 /*return*/];\n            link = typeof linkType === 'function' ? linkType(record, record.id) : typeof rowClick === 'function' ? function (record, resource) {\n              return rowClick(record.id, resource, record);\n            } : false;\n            return [4 /*yield*/, getPathForRecord({\n              record: record,\n              resource: resource,\n              link: link\n            })];\n          case 1:\n            path = _a.sent();\n            if (path === false || path == null) {\n              return [2 /*return*/];\n            }\n            navigate(path);\n            return [2 /*return*/];\n        }\n      });\n    });\n  });\n  if (!record) return null;\n  if (isFunctionLink) {\n    return React.createElement(ListItem, {\n      disablePadding: true,\n      sx: {\n        '.MuiListItem-container': {\n          width: '100%'\n        }\n      }\n    }, React.createElement(ListItemButton, {\n      onClick: handleClick,\n      style: rowStyle ? rowStyle(record, rowIndex) : undefined,\n      sx: rowSx === null || rowSx === void 0 ? void 0 : rowSx(record, rowIndex)\n    }, children));\n  }\n  if (pathForRecord) {\n    return React.createElement(ListItem, {\n      disablePadding: true,\n      sx: {\n        '.MuiListItem-container': {\n          width: '100%'\n        }\n      }\n    }, React.createElement(ListItemButton, {\n      component: Link,\n      to: pathForRecord,\n      style: rowStyle ? rowStyle(record, rowIndex) : undefined,\n      sx: rowSx === null || rowSx === void 0 ? void 0 : rowSx(record, rowIndex)\n    }, children));\n  }\n  return React.createElement(ListItem, {\n    sx: {\n      '.MuiListItem-container': {\n        width: '100%'\n      }\n    }\n  }, children);\n};","map":{"version":3,"names":["React","ListItem","ListItemButton","useEvent","useGetPathForRecord","useGetPathForRecordCallback","useRecordContext","useResourceContext","Link","useNavigate","SimpleListItem","props","children","linkType","rowClick","rowIndex","rowSx","rowStyle","resource","record","navigate","isFunctionLink","pathForRecord","link","getPathForRecord","handleClick","__awaiter","id","path","_a","sent","createElement","disablePadding","sx","width","onClick","style","undefined","component","to"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-ui-materialui/src/list/SimpleList/SimpleListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport type { SxProps } from '@mui/material';\nimport { ListItem, ListItemButton, ListItemProps } from '@mui/material';\nimport {\n    Identifier,\n    LinkToType,\n    RaRecord,\n    useEvent,\n    useGetPathForRecord,\n    useGetPathForRecordCallback,\n    useRecordContext,\n    useResourceContext,\n} from 'ra-core';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { RowClickFunction } from '../types';\n\nexport const SimpleListItem = <RecordType extends RaRecord = any>(\n    props: SimpleListItemProps<RecordType>\n) => {\n    const { children, linkType, rowClick, rowIndex, rowSx, rowStyle } = props;\n    const resource = useResourceContext(props);\n    const record = useRecordContext<RecordType>(props);\n    const navigate = useNavigate();\n    // If we don't have a function to get the path, we can compute the path immediately and set the href\n    // on the Link correctly without onClick (better for accessibility)\n    const isFunctionLink =\n        typeof linkType === 'function' || typeof rowClick === 'function';\n    const pathForRecord = useGetPathForRecord({\n        link: isFunctionLink ? false : linkType ?? rowClick,\n        resource,\n    });\n    const getPathForRecord = useGetPathForRecordCallback();\n    const handleClick = useEvent(async () => {\n        // No need to handle non function linkType or rowClick\n        if (!isFunctionLink) return;\n        if (!record) return;\n\n        let link: LinkToType =\n            typeof linkType === 'function'\n                ? linkType(record, record.id)\n                : typeof rowClick === 'function'\n                  ? (record, resource) => rowClick(record.id, resource, record)\n                  : false;\n\n        const path = await getPathForRecord({\n            record,\n            resource,\n            link,\n        });\n        if (path === false || path == null) {\n            return;\n        }\n        navigate(path);\n    });\n\n    if (!record) return null;\n\n    if (isFunctionLink) {\n        return (\n            <ListItem\n                disablePadding\n                sx={{\n                    '.MuiListItem-container': {\n                        width: '100%',\n                    },\n                }}\n            >\n                <ListItemButton\n                    onClick={handleClick}\n                    style={rowStyle ? rowStyle(record, rowIndex) : undefined}\n                    sx={rowSx?.(record, rowIndex)}\n                >\n                    {children}\n                </ListItemButton>\n            </ListItem>\n        );\n    }\n\n    if (pathForRecord) {\n        return (\n            <ListItem\n                disablePadding\n                sx={{\n                    '.MuiListItem-container': {\n                        width: '100%',\n                    },\n                }}\n            >\n                <ListItemButton\n                    component={Link}\n                    to={pathForRecord}\n                    style={rowStyle ? rowStyle(record, rowIndex) : undefined}\n                    sx={rowSx?.(record, rowIndex)}\n                >\n                    {children}\n                </ListItemButton>\n            </ListItem>\n        );\n    }\n\n    return (\n        <ListItem\n            sx={{\n                '.MuiListItem-container': {\n                    width: '100%',\n                },\n            }}\n        >\n            {children}\n        </ListItem>\n    );\n};\n\nexport type FunctionToElement<RecordType extends RaRecord = any> = (\n    record: RecordType,\n    id: Identifier\n) => ReactNode;\n\nexport type FunctionLinkType = (record: RaRecord, id: Identifier) => string;\n\nexport interface SimpleListBaseProps<RecordType extends RaRecord = any> {\n    leftAvatar?: FunctionToElement<RecordType>;\n    leftIcon?: FunctionToElement<RecordType>;\n    primaryText?: FunctionToElement<RecordType> | ReactElement | string;\n    /**\n     * @deprecated use rowClick instead\n     */\n    linkType?: string | FunctionLinkType | false;\n\n    /**\n     * The action to trigger when the user clicks on a row.\n     *\n     * @see https://marmelab.com/react-admin/Datagrid.html#rowclick\n     * @example\n     * import { List, Datagrid } from 'react-admin';\n     *\n     * export const PostList = () => (\n     *     <List>\n     *         <Datagrid rowClick=\"edit\">\n     *             ...\n     *         </Datagrid>                    </ListItem>\n\n     *     </List>\n     * );\n     */\n    rowClick?: string | RowClickFunction | false;\n    rightAvatar?: FunctionToElement<RecordType>;\n    rightIcon?: FunctionToElement<RecordType>;\n    secondaryText?: FunctionToElement<RecordType> | ReactElement | string;\n    tertiaryText?: FunctionToElement<RecordType> | ReactElement | string;\n    rowSx?: (record: RecordType, index: number) => SxProps;\n    rowStyle?: (record: RecordType, index: number) => any;\n}\n\nexport interface SimpleListItemProps<RecordType extends RaRecord = any>\n    extends SimpleListBaseProps<RecordType>,\n        Omit<ListItemProps, 'button' | 'component' | 'id'> {\n    rowIndex: number;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}