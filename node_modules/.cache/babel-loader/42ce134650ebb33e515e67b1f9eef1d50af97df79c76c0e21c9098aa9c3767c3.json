{"ast":null,"code":"import * as React from 'react';\nimport { Children } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { WithPermissions, LogoutOnMount, useAuthState } from '../auth';\nimport { useScrollToTop } from '../routing';\nimport { useConfigureAdminRouterFromChildren } from './useConfigureAdminRouterFromChildren';\nimport { HasDashboardContextProvider } from './HasDashboardContext';\nimport { NavigateToFirstResource } from './NavigateToFirstResource';\nexport var CoreAdminRoutes = function (props) {\n  useScrollToTop();\n  var _a = useConfigureAdminRouterFromChildren(props.children),\n    customRoutesWithLayout = _a.customRoutesWithLayout,\n    customRoutesWithoutLayout = _a.customRoutesWithoutLayout,\n    status = _a.status,\n    resources = _a.resources;\n  var Layout = props.layout,\n    CatchAll = props.catchAll,\n    dashboard = props.dashboard,\n    LoadingPage = props.loading,\n    requireAuth = props.requireAuth,\n    Ready = props.ready,\n    _b = props.authenticationError,\n    AuthenticationError = _b === void 0 ? Noop : _b,\n    _c = props.accessDenied,\n    AccessDenied = _c === void 0 ? Noop : _c;\n  var _d = useAuthState(undefined,\n    // do not log the user out on failure to allow access to custom routes with no layout\n    false, {\n      enabled: requireAuth\n    }),\n    authenticated = _d.authenticated,\n    isPendingAuthenticated = _d.isPending;\n  if (status === 'empty') {\n    if (!Ready) {\n      throw new Error('The admin is empty. Please provide an empty component, or pass Resource or CustomRoutes as children.');\n    }\n    return React.createElement(Ready, null);\n  }\n  // Note: custom routes with no layout are always rendered, regardless of the auth status\n  if (status === 'loading' || requireAuth && isPendingAuthenticated) {\n    return React.createElement(Routes, null, customRoutesWithoutLayout, React.createElement(Route, {\n      path: \"*\",\n      element: React.createElement(\"div\", {\n        style: {\n          height: '100vh'\n        }\n      }, React.createElement(LoadingPage, null))\n    }));\n  }\n  if (requireAuth && (isPendingAuthenticated || !authenticated)) {\n    return React.createElement(Routes, null, customRoutesWithoutLayout, React.createElement(Route, {\n      path: \"*\",\n      element: React.createElement(LogoutOnMount, null)\n    }));\n  }\n  return React.createElement(Routes, null, customRoutesWithoutLayout, React.createElement(Route, {\n    path: \"/*\",\n    element: React.createElement(HasDashboardContextProvider, {\n      value: !!dashboard\n    }, React.createElement(Layout, null, React.createElement(Routes, null, customRoutesWithLayout, Children.map(resources, function (resource) {\n      return React.createElement(Route, {\n        key: resource.props.name,\n        path: \"\".concat(resource.props.name, \"/*\"),\n        element: resource\n      });\n    }), React.createElement(Route, {\n      path: \"/\",\n      element: dashboard ? React.createElement(WithPermissions, {\n        authParams: defaultAuthParams,\n        component: dashboard,\n        loading: LoadingPage\n      }) : React.createElement(NavigateToFirstResource, {\n        loading: LoadingPage\n      })\n    }), React.createElement(Route, {\n      path: \"/authentication-error\",\n      element: React.createElement(AuthenticationError, null)\n    }), React.createElement(Route, {\n      path: \"/access-denied\",\n      element: React.createElement(AccessDenied, null)\n    }), React.createElement(Route, {\n      path: \"*\",\n      element: React.createElement(CatchAll, null)\n    }))))\n  }));\n};\n// FIXME in v6: make dashboard anonymous by default to remove this hack\nvar defaultAuthParams = {\n  params: {\n    route: 'dashboard'\n  }\n};\nvar Noop = function () {\n  return null;\n};","map":{"version":3,"names":["React","Children","Route","Routes","WithPermissions","LogoutOnMount","useAuthState","useScrollToTop","useConfigureAdminRouterFromChildren","HasDashboardContextProvider","NavigateToFirstResource","CoreAdminRoutes","props","_a","children","customRoutesWithLayout","customRoutesWithoutLayout","status","resources","Layout","layout","CatchAll","catchAll","dashboard","LoadingPage","loading","requireAuth","Ready","ready","_b","authenticationError","AuthenticationError","Noop","_c","accessDenied","AccessDenied","_d","undefined","enabled","authenticated","isPendingAuthenticated","isPending","Error","createElement","path","element","style","height","value","map","resource","key","name","concat","authParams","defaultAuthParams","component","params","route"],"sources":["/home/diarietou/Bureau/afterSA/test/testfront/react-admin-test/node_modules/ra-core/src/core/CoreAdminRoutes.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Children, ComponentType } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { WithPermissions, LogoutOnMount, useAuthState } from '../auth';\nimport { useScrollToTop } from '../routing';\nimport {\n    AdminChildren,\n    CatchAllComponent,\n    DashboardComponent,\n    LayoutComponent,\n    LoadingComponent,\n} from '../types';\nimport { useConfigureAdminRouterFromChildren } from './useConfigureAdminRouterFromChildren';\nimport { HasDashboardContextProvider } from './HasDashboardContext';\nimport { NavigateToFirstResource } from './NavigateToFirstResource';\n\nexport const CoreAdminRoutes = (props: CoreAdminRoutesProps) => {\n    useScrollToTop();\n\n    const {\n        customRoutesWithLayout,\n        customRoutesWithoutLayout,\n        status,\n        resources,\n    } = useConfigureAdminRouterFromChildren(props.children);\n\n    const {\n        layout: Layout,\n        catchAll: CatchAll,\n        dashboard,\n        loading: LoadingPage,\n        requireAuth,\n        ready: Ready,\n        authenticationError: AuthenticationError = Noop,\n        accessDenied: AccessDenied = Noop,\n    } = props;\n\n    const { authenticated, isPending: isPendingAuthenticated } = useAuthState(\n        undefined,\n        // do not log the user out on failure to allow access to custom routes with no layout\n        false,\n        { enabled: requireAuth }\n    );\n\n    if (status === 'empty') {\n        if (!Ready) {\n            throw new Error(\n                'The admin is empty. Please provide an empty component, or pass Resource or CustomRoutes as children.'\n            );\n        }\n        return <Ready />;\n    }\n\n    // Note: custom routes with no layout are always rendered, regardless of the auth status\n\n    if (status === 'loading' || (requireAuth && isPendingAuthenticated)) {\n        return (\n            <Routes>\n                {customRoutesWithoutLayout}\n                <Route\n                    path=\"*\"\n                    element={\n                        <div style={{ height: '100vh' }}>\n                            <LoadingPage />\n                        </div>\n                    }\n                />\n            </Routes>\n        );\n    }\n\n    if (requireAuth && (isPendingAuthenticated || !authenticated)) {\n        return (\n            <Routes>\n                {customRoutesWithoutLayout}\n                <Route path=\"*\" element={<LogoutOnMount />} />\n            </Routes>\n        );\n    }\n\n    return (\n        <Routes>\n            {/*\n                Render the custom routes that were outside the child function.\n            */}\n            {customRoutesWithoutLayout}\n            <Route\n                path=\"/*\"\n                element={\n                    <HasDashboardContextProvider value={!!dashboard}>\n                        <Layout>\n                            <Routes>\n                                {customRoutesWithLayout}\n                                {Children.map(resources, resource => (\n                                    <Route\n                                        key={resource.props.name}\n                                        path={`${resource.props.name}/*`}\n                                        element={resource}\n                                    />\n                                ))}\n                                <Route\n                                    path=\"/\"\n                                    element={\n                                        dashboard ? (\n                                            <WithPermissions\n                                                authParams={defaultAuthParams}\n                                                component={dashboard}\n                                                loading={LoadingPage}\n                                            />\n                                        ) : (\n                                            <NavigateToFirstResource\n                                                loading={LoadingPage}\n                                            />\n                                        )\n                                    }\n                                />\n                                <Route\n                                    path=\"/authentication-error\"\n                                    element={<AuthenticationError />}\n                                />\n                                <Route\n                                    path=\"/access-denied\"\n                                    element={<AccessDenied />}\n                                />\n                                <Route path=\"*\" element={<CatchAll />} />\n                            </Routes>\n                        </Layout>\n                    </HasDashboardContextProvider>\n                }\n            />\n        </Routes>\n    );\n};\n\nexport interface CoreAdminRoutesProps {\n    dashboard?: DashboardComponent;\n    layout: LayoutComponent;\n    catchAll: CatchAllComponent;\n    children?: AdminChildren;\n    loading: LoadingComponent;\n    requireAuth?: boolean;\n    ready?: ComponentType;\n    authenticationError?: ComponentType;\n    accessDenied?: React.ComponentType;\n}\n\n// FIXME in v6: make dashboard anonymous by default to remove this hack\nconst defaultAuthParams = { params: { route: 'dashboard' } };\nconst Noop = () => null;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}